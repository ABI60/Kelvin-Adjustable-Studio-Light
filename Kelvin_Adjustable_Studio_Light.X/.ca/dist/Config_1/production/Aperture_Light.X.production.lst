

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 05 18:03:10 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC12F1571 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011D                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  020C                     	;# 
   125  028C                     	;# 
   126  030C                     	;# 
   127  038C                     	;# 
   128  0391                     	;# 
   129  0392                     	;# 
   130  0393                     	;# 
   131  0691                     	;# 
   132  0692                     	;# 
   133  0693                     	;# 
   134  0694                     	;# 
   135  0695                     	;# 
   136  0D8E                     	;# 
   137  0D8F                     	;# 
   138  0D90                     	;# 
   139  0D91                     	;# 
   140  0D91                     	;# 
   141  0D92                     	;# 
   142  0D93                     	;# 
   143  0D93                     	;# 
   144  0D94                     	;# 
   145  0D95                     	;# 
   146  0D95                     	;# 
   147  0D96                     	;# 
   148  0D97                     	;# 
   149  0D97                     	;# 
   150  0D98                     	;# 
   151  0D99                     	;# 
   152  0D99                     	;# 
   153  0D9A                     	;# 
   154  0D9B                     	;# 
   155  0D9C                     	;# 
   156  0D9C                     	;# 
   157  0D9D                     	;# 
   158  0D9D                     	;# 
   159  0D9E                     	;# 
   160  0D9F                     	;# 
   161  0DA0                     	;# 
   162  0DA1                     	;# 
   163  0DA1                     	;# 
   164  0DA2                     	;# 
   165  0DA3                     	;# 
   166  0DA3                     	;# 
   167  0DA4                     	;# 
   168  0DA5                     	;# 
   169  0DA5                     	;# 
   170  0DA6                     	;# 
   171  0DA7                     	;# 
   172  0DA7                     	;# 
   173  0DA8                     	;# 
   174  0DA9                     	;# 
   175  0DA9                     	;# 
   176  0DAA                     	;# 
   177  0DAB                     	;# 
   178  0DAC                     	;# 
   179  0DAC                     	;# 
   180  0DAD                     	;# 
   181  0DAD                     	;# 
   182  0DAE                     	;# 
   183  0DAF                     	;# 
   184  0DB0                     	;# 
   185  0DB1                     	;# 
   186  0DB1                     	;# 
   187  0DB2                     	;# 
   188  0DB3                     	;# 
   189  0DB3                     	;# 
   190  0DB4                     	;# 
   191  0DB5                     	;# 
   192  0DB5                     	;# 
   193  0DB6                     	;# 
   194  0DB7                     	;# 
   195  0DB7                     	;# 
   196  0DB8                     	;# 
   197  0DB9                     	;# 
   198  0DB9                     	;# 
   199  0DBA                     	;# 
   200  0DBB                     	;# 
   201  0DBC                     	;# 
   202  0DBC                     	;# 
   203  0DBD                     	;# 
   204  0DBD                     	;# 
   205  0DBE                     	;# 
   206  0DBF                     	;# 
   207  0DC0                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEE                     	;# 
   221  0FEF                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  008C                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  011D                     	;# 
   272  011D                     	;# 
   273  018C                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0197                     	;# 
   283  020C                     	;# 
   284  028C                     	;# 
   285  030C                     	;# 
   286  038C                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  0393                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0D8E                     	;# 
   296  0D8F                     	;# 
   297  0D90                     	;# 
   298  0D91                     	;# 
   299  0D91                     	;# 
   300  0D92                     	;# 
   301  0D93                     	;# 
   302  0D93                     	;# 
   303  0D94                     	;# 
   304  0D95                     	;# 
   305  0D95                     	;# 
   306  0D96                     	;# 
   307  0D97                     	;# 
   308  0D97                     	;# 
   309  0D98                     	;# 
   310  0D99                     	;# 
   311  0D99                     	;# 
   312  0D9A                     	;# 
   313  0D9B                     	;# 
   314  0D9C                     	;# 
   315  0D9C                     	;# 
   316  0D9D                     	;# 
   317  0D9D                     	;# 
   318  0D9E                     	;# 
   319  0D9F                     	;# 
   320  0DA0                     	;# 
   321  0DA1                     	;# 
   322  0DA1                     	;# 
   323  0DA2                     	;# 
   324  0DA3                     	;# 
   325  0DA3                     	;# 
   326  0DA4                     	;# 
   327  0DA5                     	;# 
   328  0DA5                     	;# 
   329  0DA6                     	;# 
   330  0DA7                     	;# 
   331  0DA7                     	;# 
   332  0DA8                     	;# 
   333  0DA9                     	;# 
   334  0DA9                     	;# 
   335  0DAA                     	;# 
   336  0DAB                     	;# 
   337  0DAC                     	;# 
   338  0DAC                     	;# 
   339  0DAD                     	;# 
   340  0DAD                     	;# 
   341  0DAE                     	;# 
   342  0DAF                     	;# 
   343  0DB0                     	;# 
   344  0DB1                     	;# 
   345  0DB1                     	;# 
   346  0DB2                     	;# 
   347  0DB3                     	;# 
   348  0DB3                     	;# 
   349  0DB4                     	;# 
   350  0DB5                     	;# 
   351  0DB5                     	;# 
   352  0DB6                     	;# 
   353  0DB7                     	;# 
   354  0DB7                     	;# 
   355  0DB8                     	;# 
   356  0DB9                     	;# 
   357  0DB9                     	;# 
   358  0DBA                     	;# 
   359  0DBB                     	;# 
   360  0DBC                     	;# 
   361  0DBC                     	;# 
   362  0DBD                     	;# 
   363  0DBD                     	;# 
   364  0DBE                     	;# 
   365  0DBF                     	;# 
   366  0DC0                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  008C                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0093                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  009F                     	;# 
   422  010C                     	;# 
   423  0111                     	;# 
   424  0112                     	;# 
   425  0115                     	;# 
   426  0116                     	;# 
   427  0117                     	;# 
   428  0118                     	;# 
   429  0119                     	;# 
   430  011D                     	;# 
   431  011D                     	;# 
   432  018C                     	;# 
   433  0191                     	;# 
   434  0191                     	;# 
   435  0192                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0194                     	;# 
   439  0195                     	;# 
   440  0196                     	;# 
   441  0197                     	;# 
   442  020C                     	;# 
   443  028C                     	;# 
   444  030C                     	;# 
   445  038C                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  0691                     	;# 
   450  0692                     	;# 
   451  0693                     	;# 
   452  0694                     	;# 
   453  0695                     	;# 
   454  0D8E                     	;# 
   455  0D8F                     	;# 
   456  0D90                     	;# 
   457  0D91                     	;# 
   458  0D91                     	;# 
   459  0D92                     	;# 
   460  0D93                     	;# 
   461  0D93                     	;# 
   462  0D94                     	;# 
   463  0D95                     	;# 
   464  0D95                     	;# 
   465  0D96                     	;# 
   466  0D97                     	;# 
   467  0D97                     	;# 
   468  0D98                     	;# 
   469  0D99                     	;# 
   470  0D99                     	;# 
   471  0D9A                     	;# 
   472  0D9B                     	;# 
   473  0D9C                     	;# 
   474  0D9C                     	;# 
   475  0D9D                     	;# 
   476  0D9D                     	;# 
   477  0D9E                     	;# 
   478  0D9F                     	;# 
   479  0DA0                     	;# 
   480  0DA1                     	;# 
   481  0DA1                     	;# 
   482  0DA2                     	;# 
   483  0DA3                     	;# 
   484  0DA3                     	;# 
   485  0DA4                     	;# 
   486  0DA5                     	;# 
   487  0DA5                     	;# 
   488  0DA6                     	;# 
   489  0DA7                     	;# 
   490  0DA7                     	;# 
   491  0DA8                     	;# 
   492  0DA9                     	;# 
   493  0DA9                     	;# 
   494  0DAA                     	;# 
   495  0DAB                     	;# 
   496  0DAC                     	;# 
   497  0DAC                     	;# 
   498  0DAD                     	;# 
   499  0DAD                     	;# 
   500  0DAE                     	;# 
   501  0DAF                     	;# 
   502  0DB0                     	;# 
   503  0DB1                     	;# 
   504  0DB1                     	;# 
   505  0DB2                     	;# 
   506  0DB3                     	;# 
   507  0DB3                     	;# 
   508  0DB4                     	;# 
   509  0DB5                     	;# 
   510  0DB5                     	;# 
   511  0DB6                     	;# 
   512  0DB7                     	;# 
   513  0DB7                     	;# 
   514  0DB8                     	;# 
   515  0DB9                     	;# 
   516  0DB9                     	;# 
   517  0DBA                     	;# 
   518  0DBB                     	;# 
   519  0DBC                     	;# 
   520  0DBC                     	;# 
   521  0DBD                     	;# 
   522  0DBD                     	;# 
   523  0DBE                     	;# 
   524  0DBF                     	;# 
   525  0DC0                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  008C                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0098                     	;# 
   573  0099                     	;# 
   574  009A                     	;# 
   575  009B                     	;# 
   576  009B                     	;# 
   577  009C                     	;# 
   578  009D                     	;# 
   579  009E                     	;# 
   580  009F                     	;# 
   581  010C                     	;# 
   582  0111                     	;# 
   583  0112                     	;# 
   584  0115                     	;# 
   585  0116                     	;# 
   586  0117                     	;# 
   587  0118                     	;# 
   588  0119                     	;# 
   589  011D                     	;# 
   590  011D                     	;# 
   591  018C                     	;# 
   592  0191                     	;# 
   593  0191                     	;# 
   594  0192                     	;# 
   595  0193                     	;# 
   596  0193                     	;# 
   597  0194                     	;# 
   598  0195                     	;# 
   599  0196                     	;# 
   600  0197                     	;# 
   601  020C                     	;# 
   602  028C                     	;# 
   603  030C                     	;# 
   604  038C                     	;# 
   605  0391                     	;# 
   606  0392                     	;# 
   607  0393                     	;# 
   608  0691                     	;# 
   609  0692                     	;# 
   610  0693                     	;# 
   611  0694                     	;# 
   612  0695                     	;# 
   613  0D8E                     	;# 
   614  0D8F                     	;# 
   615  0D90                     	;# 
   616  0D91                     	;# 
   617  0D91                     	;# 
   618  0D92                     	;# 
   619  0D93                     	;# 
   620  0D93                     	;# 
   621  0D94                     	;# 
   622  0D95                     	;# 
   623  0D95                     	;# 
   624  0D96                     	;# 
   625  0D97                     	;# 
   626  0D97                     	;# 
   627  0D98                     	;# 
   628  0D99                     	;# 
   629  0D99                     	;# 
   630  0D9A                     	;# 
   631  0D9B                     	;# 
   632  0D9C                     	;# 
   633  0D9C                     	;# 
   634  0D9D                     	;# 
   635  0D9D                     	;# 
   636  0D9E                     	;# 
   637  0D9F                     	;# 
   638  0DA0                     	;# 
   639  0DA1                     	;# 
   640  0DA1                     	;# 
   641  0DA2                     	;# 
   642  0DA3                     	;# 
   643  0DA3                     	;# 
   644  0DA4                     	;# 
   645  0DA5                     	;# 
   646  0DA5                     	;# 
   647  0DA6                     	;# 
   648  0DA7                     	;# 
   649  0DA7                     	;# 
   650  0DA8                     	;# 
   651  0DA9                     	;# 
   652  0DA9                     	;# 
   653  0DAA                     	;# 
   654  0DAB                     	;# 
   655  0DAC                     	;# 
   656  0DAC                     	;# 
   657  0DAD                     	;# 
   658  0DAD                     	;# 
   659  0DAE                     	;# 
   660  0DAF                     	;# 
   661  0DB0                     	;# 
   662  0DB1                     	;# 
   663  0DB1                     	;# 
   664  0DB2                     	;# 
   665  0DB3                     	;# 
   666  0DB3                     	;# 
   667  0DB4                     	;# 
   668  0DB5                     	;# 
   669  0DB5                     	;# 
   670  0DB6                     	;# 
   671  0DB7                     	;# 
   672  0DB7                     	;# 
   673  0DB8                     	;# 
   674  0DB9                     	;# 
   675  0DB9                     	;# 
   676  0DBA                     	;# 
   677  0DBB                     	;# 
   678  0DBC                     	;# 
   679  0DBC                     	;# 
   680  0DBD                     	;# 
   681  0DBD                     	;# 
   682  0DBE                     	;# 
   683  0DBF                     	;# 
   684  0DC0                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE8                     	;# 
   691  0FE9                     	;# 
   692  0FEA                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEE                     	;# 
   698  0FEF                     	;# 
   699  0000                     	;# 
   700  0001                     	;# 
   701  0002                     	;# 
   702  0003                     	;# 
   703  0004                     	;# 
   704  0005                     	;# 
   705  0006                     	;# 
   706  0007                     	;# 
   707  0008                     	;# 
   708  0009                     	;# 
   709  000A                     	;# 
   710  000B                     	;# 
   711  000C                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0013                     	;# 
   715  0015                     	;# 
   716  0016                     	;# 
   717  0016                     	;# 
   718  0017                     	;# 
   719  0018                     	;# 
   720  0019                     	;# 
   721  001A                     	;# 
   722  001B                     	;# 
   723  001C                     	;# 
   724  008C                     	;# 
   725  0091                     	;# 
   726  0092                     	;# 
   727  0093                     	;# 
   728  0095                     	;# 
   729  0096                     	;# 
   730  0097                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009A                     	;# 
   734  009B                     	;# 
   735  009B                     	;# 
   736  009C                     	;# 
   737  009D                     	;# 
   738  009E                     	;# 
   739  009F                     	;# 
   740  010C                     	;# 
   741  0111                     	;# 
   742  0112                     	;# 
   743  0115                     	;# 
   744  0116                     	;# 
   745  0117                     	;# 
   746  0118                     	;# 
   747  0119                     	;# 
   748  011D                     	;# 
   749  011D                     	;# 
   750  018C                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0194                     	;# 
   757  0195                     	;# 
   758  0196                     	;# 
   759  0197                     	;# 
   760  020C                     	;# 
   761  028C                     	;# 
   762  030C                     	;# 
   763  038C                     	;# 
   764  0391                     	;# 
   765  0392                     	;# 
   766  0393                     	;# 
   767  0691                     	;# 
   768  0692                     	;# 
   769  0693                     	;# 
   770  0694                     	;# 
   771  0695                     	;# 
   772  0D8E                     	;# 
   773  0D8F                     	;# 
   774  0D90                     	;# 
   775  0D91                     	;# 
   776  0D91                     	;# 
   777  0D92                     	;# 
   778  0D93                     	;# 
   779  0D93                     	;# 
   780  0D94                     	;# 
   781  0D95                     	;# 
   782  0D95                     	;# 
   783  0D96                     	;# 
   784  0D97                     	;# 
   785  0D97                     	;# 
   786  0D98                     	;# 
   787  0D99                     	;# 
   788  0D99                     	;# 
   789  0D9A                     	;# 
   790  0D9B                     	;# 
   791  0D9C                     	;# 
   792  0D9C                     	;# 
   793  0D9D                     	;# 
   794  0D9D                     	;# 
   795  0D9E                     	;# 
   796  0D9F                     	;# 
   797  0DA0                     	;# 
   798  0DA1                     	;# 
   799  0DA1                     	;# 
   800  0DA2                     	;# 
   801  0DA3                     	;# 
   802  0DA3                     	;# 
   803  0DA4                     	;# 
   804  0DA5                     	;# 
   805  0DA5                     	;# 
   806  0DA6                     	;# 
   807  0DA7                     	;# 
   808  0DA7                     	;# 
   809  0DA8                     	;# 
   810  0DA9                     	;# 
   811  0DA9                     	;# 
   812  0DAA                     	;# 
   813  0DAB                     	;# 
   814  0DAC                     	;# 
   815  0DAC                     	;# 
   816  0DAD                     	;# 
   817  0DAD                     	;# 
   818  0DAE                     	;# 
   819  0DAF                     	;# 
   820  0DB0                     	;# 
   821  0DB1                     	;# 
   822  0DB1                     	;# 
   823  0DB2                     	;# 
   824  0DB3                     	;# 
   825  0DB3                     	;# 
   826  0DB4                     	;# 
   827  0DB5                     	;# 
   828  0DB5                     	;# 
   829  0DB6                     	;# 
   830  0DB7                     	;# 
   831  0DB7                     	;# 
   832  0DB8                     	;# 
   833  0DB9                     	;# 
   834  0DB9                     	;# 
   835  0DBA                     	;# 
   836  0DBB                     	;# 
   837  0DBC                     	;# 
   838  0DBC                     	;# 
   839  0DBD                     	;# 
   840  0DBD                     	;# 
   841  0DBE                     	;# 
   842  0DBF                     	;# 
   843  0DC0                     	;# 
   844  0FE4                     	;# 
   845  0FE5                     	;# 
   846  0FE6                     	;# 
   847  0FE7                     	;# 
   848  0FE8                     	;# 
   849  0FE8                     	;# 
   850  0FE9                     	;# 
   851  0FEA                     	;# 
   852  0FEA                     	;# 
   853  0FEB                     	;# 
   854  0FED                     	;# 
   855  0FEE                     	;# 
   856  0FEE                     	;# 
   857  0FEF                     	;# 
   858  0000                     	;# 
   859  0001                     	;# 
   860  0002                     	;# 
   861  0003                     	;# 
   862  0004                     	;# 
   863  0005                     	;# 
   864  0006                     	;# 
   865  0007                     	;# 
   866  0008                     	;# 
   867  0009                     	;# 
   868  000A                     	;# 
   869  000B                     	;# 
   870  000C                     	;# 
   871  0011                     	;# 
   872  0012                     	;# 
   873  0013                     	;# 
   874  0015                     	;# 
   875  0016                     	;# 
   876  0016                     	;# 
   877  0017                     	;# 
   878  0018                     	;# 
   879  0019                     	;# 
   880  001A                     	;# 
   881  001B                     	;# 
   882  001C                     	;# 
   883  008C                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0095                     	;# 
   888  0096                     	;# 
   889  0097                     	;# 
   890  0098                     	;# 
   891  0099                     	;# 
   892  009A                     	;# 
   893  009B                     	;# 
   894  009B                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  009F                     	;# 
   899  010C                     	;# 
   900  0111                     	;# 
   901  0112                     	;# 
   902  0115                     	;# 
   903  0116                     	;# 
   904  0117                     	;# 
   905  0118                     	;# 
   906  0119                     	;# 
   907  011D                     	;# 
   908  011D                     	;# 
   909  018C                     	;# 
   910  0191                     	;# 
   911  0191                     	;# 
   912  0192                     	;# 
   913  0193                     	;# 
   914  0193                     	;# 
   915  0194                     	;# 
   916  0195                     	;# 
   917  0196                     	;# 
   918  0197                     	;# 
   919  020C                     	;# 
   920  028C                     	;# 
   921  030C                     	;# 
   922  038C                     	;# 
   923  0391                     	;# 
   924  0392                     	;# 
   925  0393                     	;# 
   926  0691                     	;# 
   927  0692                     	;# 
   928  0693                     	;# 
   929  0694                     	;# 
   930  0695                     	;# 
   931  0D8E                     	;# 
   932  0D8F                     	;# 
   933  0D90                     	;# 
   934  0D91                     	;# 
   935  0D91                     	;# 
   936  0D92                     	;# 
   937  0D93                     	;# 
   938  0D93                     	;# 
   939  0D94                     	;# 
   940  0D95                     	;# 
   941  0D95                     	;# 
   942  0D96                     	;# 
   943  0D97                     	;# 
   944  0D97                     	;# 
   945  0D98                     	;# 
   946  0D99                     	;# 
   947  0D99                     	;# 
   948  0D9A                     	;# 
   949  0D9B                     	;# 
   950  0D9C                     	;# 
   951  0D9C                     	;# 
   952  0D9D                     	;# 
   953  0D9D                     	;# 
   954  0D9E                     	;# 
   955  0D9F                     	;# 
   956  0DA0                     	;# 
   957  0DA1                     	;# 
   958  0DA1                     	;# 
   959  0DA2                     	;# 
   960  0DA3                     	;# 
   961  0DA3                     	;# 
   962  0DA4                     	;# 
   963  0DA5                     	;# 
   964  0DA5                     	;# 
   965  0DA6                     	;# 
   966  0DA7                     	;# 
   967  0DA7                     	;# 
   968  0DA8                     	;# 
   969  0DA9                     	;# 
   970  0DA9                     	;# 
   971  0DAA                     	;# 
   972  0DAB                     	;# 
   973  0DAC                     	;# 
   974  0DAC                     	;# 
   975  0DAD                     	;# 
   976  0DAD                     	;# 
   977  0DAE                     	;# 
   978  0DAF                     	;# 
   979  0DB0                     	;# 
   980  0DB1                     	;# 
   981  0DB1                     	;# 
   982  0DB2                     	;# 
   983  0DB3                     	;# 
   984  0DB3                     	;# 
   985  0DB4                     	;# 
   986  0DB5                     	;# 
   987  0DB5                     	;# 
   988  0DB6                     	;# 
   989  0DB7                     	;# 
   990  0DB7                     	;# 
   991  0DB8                     	;# 
   992  0DB9                     	;# 
   993  0DB9                     	;# 
   994  0DBA                     	;# 
   995  0DBB                     	;# 
   996  0DBC                     	;# 
   997  0DBC                     	;# 
   998  0DBD                     	;# 
   999  0DBD                     	;# 
  1000  0DBE                     	;# 
  1001  0DBF                     	;# 
  1002  0DC0                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE8                     	;# 
  1009  0FE9                     	;# 
  1010  0FEA                     	;# 
  1011  0FEA                     	;# 
  1012  0FEB                     	;# 
  1013  0FED                     	;# 
  1014  0FEE                     	;# 
  1015  0FEE                     	;# 
  1016  0FEF                     	;# 
  1017  0000                     	;# 
  1018  0001                     	;# 
  1019  0002                     	;# 
  1020  0003                     	;# 
  1021  0004                     	;# 
  1022  0005                     	;# 
  1023  0006                     	;# 
  1024  0007                     	;# 
  1025  0008                     	;# 
  1026  0009                     	;# 
  1027  000A                     	;# 
  1028  000B                     	;# 
  1029  000C                     	;# 
  1030  0011                     	;# 
  1031  0012                     	;# 
  1032  0013                     	;# 
  1033  0015                     	;# 
  1034  0016                     	;# 
  1035  0016                     	;# 
  1036  0017                     	;# 
  1037  0018                     	;# 
  1038  0019                     	;# 
  1039  001A                     	;# 
  1040  001B                     	;# 
  1041  001C                     	;# 
  1042  008C                     	;# 
  1043  0091                     	;# 
  1044  0092                     	;# 
  1045  0093                     	;# 
  1046  0095                     	;# 
  1047  0096                     	;# 
  1048  0097                     	;# 
  1049  0098                     	;# 
  1050  0099                     	;# 
  1051  009A                     	;# 
  1052  009B                     	;# 
  1053  009B                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009E                     	;# 
  1057  009F                     	;# 
  1058  010C                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0115                     	;# 
  1062  0116                     	;# 
  1063  0117                     	;# 
  1064  0118                     	;# 
  1065  0119                     	;# 
  1066  011D                     	;# 
  1067  011D                     	;# 
  1068  018C                     	;# 
  1069  0191                     	;# 
  1070  0191                     	;# 
  1071  0192                     	;# 
  1072  0193                     	;# 
  1073  0193                     	;# 
  1074  0194                     	;# 
  1075  0195                     	;# 
  1076  0196                     	;# 
  1077  0197                     	;# 
  1078  020C                     	;# 
  1079  028C                     	;# 
  1080  030C                     	;# 
  1081  038C                     	;# 
  1082  0391                     	;# 
  1083  0392                     	;# 
  1084  0393                     	;# 
  1085  0691                     	;# 
  1086  0692                     	;# 
  1087  0693                     	;# 
  1088  0694                     	;# 
  1089  0695                     	;# 
  1090  0D8E                     	;# 
  1091  0D8F                     	;# 
  1092  0D90                     	;# 
  1093  0D91                     	;# 
  1094  0D91                     	;# 
  1095  0D92                     	;# 
  1096  0D93                     	;# 
  1097  0D93                     	;# 
  1098  0D94                     	;# 
  1099  0D95                     	;# 
  1100  0D95                     	;# 
  1101  0D96                     	;# 
  1102  0D97                     	;# 
  1103  0D97                     	;# 
  1104  0D98                     	;# 
  1105  0D99                     	;# 
  1106  0D99                     	;# 
  1107  0D9A                     	;# 
  1108  0D9B                     	;# 
  1109  0D9C                     	;# 
  1110  0D9C                     	;# 
  1111  0D9D                     	;# 
  1112  0D9D                     	;# 
  1113  0D9E                     	;# 
  1114  0D9F                     	;# 
  1115  0DA0                     	;# 
  1116  0DA1                     	;# 
  1117  0DA1                     	;# 
  1118  0DA2                     	;# 
  1119  0DA3                     	;# 
  1120  0DA3                     	;# 
  1121  0DA4                     	;# 
  1122  0DA5                     	;# 
  1123  0DA5                     	;# 
  1124  0DA6                     	;# 
  1125  0DA7                     	;# 
  1126  0DA7                     	;# 
  1127  0DA8                     	;# 
  1128  0DA9                     	;# 
  1129  0DA9                     	;# 
  1130  0DAA                     	;# 
  1131  0DAB                     	;# 
  1132  0DAC                     	;# 
  1133  0DAC                     	;# 
  1134  0DAD                     	;# 
  1135  0DAD                     	;# 
  1136  0DAE                     	;# 
  1137  0DAF                     	;# 
  1138  0DB0                     	;# 
  1139  0DB1                     	;# 
  1140  0DB1                     	;# 
  1141  0DB2                     	;# 
  1142  0DB3                     	;# 
  1143  0DB3                     	;# 
  1144  0DB4                     	;# 
  1145  0DB5                     	;# 
  1146  0DB5                     	;# 
  1147  0DB6                     	;# 
  1148  0DB7                     	;# 
  1149  0DB7                     	;# 
  1150  0DB8                     	;# 
  1151  0DB9                     	;# 
  1152  0DB9                     	;# 
  1153  0DBA                     	;# 
  1154  0DBB                     	;# 
  1155  0DBC                     	;# 
  1156  0DBC                     	;# 
  1157  0DBD                     	;# 
  1158  0DBD                     	;# 
  1159  0DBE                     	;# 
  1160  0DBF                     	;# 
  1161  0DC0                     	;# 
  1162  0FE4                     	;# 
  1163  0FE5                     	;# 
  1164  0FE6                     	;# 
  1165  0FE7                     	;# 
  1166  0FE8                     	;# 
  1167  0FE8                     	;# 
  1168  0FE9                     	;# 
  1169  0FEA                     	;# 
  1170  0FEA                     	;# 
  1171  0FEB                     	;# 
  1172  0FED                     	;# 
  1173  0FEE                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  0011                     	;# 
  1190  0012                     	;# 
  1191  0013                     	;# 
  1192  0015                     	;# 
  1193  0016                     	;# 
  1194  0016                     	;# 
  1195  0017                     	;# 
  1196  0018                     	;# 
  1197  0019                     	;# 
  1198  001A                     	;# 
  1199  001B                     	;# 
  1200  001C                     	;# 
  1201  008C                     	;# 
  1202  0091                     	;# 
  1203  0092                     	;# 
  1204  0093                     	;# 
  1205  0095                     	;# 
  1206  0096                     	;# 
  1207  0097                     	;# 
  1208  0098                     	;# 
  1209  0099                     	;# 
  1210  009A                     	;# 
  1211  009B                     	;# 
  1212  009B                     	;# 
  1213  009C                     	;# 
  1214  009D                     	;# 
  1215  009E                     	;# 
  1216  009F                     	;# 
  1217  010C                     	;# 
  1218  0111                     	;# 
  1219  0112                     	;# 
  1220  0115                     	;# 
  1221  0116                     	;# 
  1222  0117                     	;# 
  1223  0118                     	;# 
  1224  0119                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  018C                     	;# 
  1228  0191                     	;# 
  1229  0191                     	;# 
  1230  0192                     	;# 
  1231  0193                     	;# 
  1232  0193                     	;# 
  1233  0194                     	;# 
  1234  0195                     	;# 
  1235  0196                     	;# 
  1236  0197                     	;# 
  1237  020C                     	;# 
  1238  028C                     	;# 
  1239  030C                     	;# 
  1240  038C                     	;# 
  1241  0391                     	;# 
  1242  0392                     	;# 
  1243  0393                     	;# 
  1244  0691                     	;# 
  1245  0692                     	;# 
  1246  0693                     	;# 
  1247  0694                     	;# 
  1248  0695                     	;# 
  1249  0D8E                     	;# 
  1250  0D8F                     	;# 
  1251  0D90                     	;# 
  1252  0D91                     	;# 
  1253  0D91                     	;# 
  1254  0D92                     	;# 
  1255  0D93                     	;# 
  1256  0D93                     	;# 
  1257  0D94                     	;# 
  1258  0D95                     	;# 
  1259  0D95                     	;# 
  1260  0D96                     	;# 
  1261  0D97                     	;# 
  1262  0D97                     	;# 
  1263  0D98                     	;# 
  1264  0D99                     	;# 
  1265  0D99                     	;# 
  1266  0D9A                     	;# 
  1267  0D9B                     	;# 
  1268  0D9C                     	;# 
  1269  0D9C                     	;# 
  1270  0D9D                     	;# 
  1271  0D9D                     	;# 
  1272  0D9E                     	;# 
  1273  0D9F                     	;# 
  1274  0DA0                     	;# 
  1275  0DA1                     	;# 
  1276  0DA1                     	;# 
  1277  0DA2                     	;# 
  1278  0DA3                     	;# 
  1279  0DA3                     	;# 
  1280  0DA4                     	;# 
  1281  0DA5                     	;# 
  1282  0DA5                     	;# 
  1283  0DA6                     	;# 
  1284  0DA7                     	;# 
  1285  0DA7                     	;# 
  1286  0DA8                     	;# 
  1287  0DA9                     	;# 
  1288  0DA9                     	;# 
  1289  0DAA                     	;# 
  1290  0DAB                     	;# 
  1291  0DAC                     	;# 
  1292  0DAC                     	;# 
  1293  0DAD                     	;# 
  1294  0DAD                     	;# 
  1295  0DAE                     	;# 
  1296  0DAF                     	;# 
  1297  0DB0                     	;# 
  1298  0DB1                     	;# 
  1299  0DB1                     	;# 
  1300  0DB2                     	;# 
  1301  0DB3                     	;# 
  1302  0DB3                     	;# 
  1303  0DB4                     	;# 
  1304  0DB5                     	;# 
  1305  0DB5                     	;# 
  1306  0DB6                     	;# 
  1307  0DB7                     	;# 
  1308  0DB7                     	;# 
  1309  0DB8                     	;# 
  1310  0DB9                     	;# 
  1311  0DB9                     	;# 
  1312  0DBA                     	;# 
  1313  0DBB                     	;# 
  1314  0DBC                     	;# 
  1315  0DBC                     	;# 
  1316  0DBD                     	;# 
  1317  0DBD                     	;# 
  1318  0DBE                     	;# 
  1319  0DBF                     	;# 
  1320  0DC0                     	;# 
  1321  0FE4                     	;# 
  1322  0FE5                     	;# 
  1323  0FE6                     	;# 
  1324  0FE7                     	;# 
  1325  0FE8                     	;# 
  1326  0FE8                     	;# 
  1327  0FE9                     	;# 
  1328  0FEA                     	;# 
  1329  0FEA                     	;# 
  1330  0FEB                     	;# 
  1331  0FED                     	;# 
  1332  0FEE                     	;# 
  1333  0FEE                     	;# 
  1334  0FEF                     	;# 
  1335                           
  1336                           	psect	idataBANK0
  1337  0000'                    __pidataBANK0:
  1338                           
  1339                           ;initializer for _white_ratio
  1340  0000' 3400               	retlw	0
  1341  0001' 3400               	retlw	0
  1342  0002' 3480               	retlw	128
  1343  0003' 343F               	retlw	63
  1344  000B                     _INTCON	set	11
  1345  000B                     _INTCONbits	set	11
  1346  009D                     _ADCON0	set	157
  1347  009E                     _ADCON1	set	158
  1348  008C                     _TRISA	set	140
  1349  0099                     _OSCCON	set	153
  1350  009B                     _ADRESL	set	155
  1351  009C                     _ADRESH	set	156
  1352  009D                     _ADCON0bits	set	157
  1353  010C                     _LATAbits	set	268
  1354  0117                     _FVRCON	set	279
  1355  011D                     _APFCON	set	285
  1356  018C                     _ANSELA	set	396
  1357  0DA3                     _PWM2DC	set	3491
  1358  0D93                     _PWM1DC	set	3475
  1359  0DA1                     _PWM2PH	set	3489
  1360  0D91                     _PWM1PH	set	3473
  1361  0DA5                     _PWM2PR	set	3493
  1362  0D95                     _PWM1PR	set	3477
  1363  0DAF                     _PWM2LDCONbits	set	3503
  1364  0DAB                     _PWM2CONbits	set	3499
  1365  0D9F                     _PWM1LDCONbits	set	3487
  1366  0D9B                     _PWM1CONbits	set	3483
  1367  0DAE                     _PWM2CLKCON	set	3502
  1368  0D9E                     _PWM1CLKCON	set	3486
  1369  0DAB                     _PWM2CON	set	3499
  1370  0D9B                     _PWM1CON	set	3483
  1371                           
  1372                           	psect	cinit
  1373  0000'                    start_initialization:	
  1374                           ; #config settings
  1375                           
  1376  0000'                    __initialization:
  1377                           
  1378                           ; Initialize objects allocated to BANK0
  1379  0000' 2000'              	fcall	__pidataBANK0	;fetch initializer
  1380  0001' 0080'              	movwf	__pdataBANK0& (0+127)
  1381  0002' 2000'              	fcall	__pidataBANK0+1	;fetch initializer
  1382  0003' 0080'              	movwf	(__pdataBANK0+1)& (0+127)
  1383  0004' 2000'              	fcall	__pidataBANK0+2	;fetch initializer
  1384  0005' 0080'              	movwf	(__pdataBANK0+2)& (0+127)
  1385  0006' 2000'              	fcall	__pidataBANK0+3	;fetch initializer
  1386  0007' 0080'              	movwf	(__pdataBANK0+3)& (0+127)
  1387                           
  1388                           ; Clear objects allocated to BANK0
  1389  0008' 0180'              	clrf	__pbssBANK0& (0+127)
  1390  0009' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
  1391  000A' 0180'              	clrf	(__pbssBANK0+2)& (0+127)
  1392  000B' 0180'              	clrf	(__pbssBANK0+3)& (0+127)
  1393  000C' 0180'              	clrf	(__pbssBANK0+4)& (0+127)
  1394  000D' 0180'              	clrf	(__pbssBANK0+5)& (0+127)
  1395  000E' 0180'              	clrf	(__pbssBANK0+6)& (0+127)
  1396  000F' 0180'              	clrf	(__pbssBANK0+7)& (0+127)
  1397  0010' 0180'              	clrf	(__pbssBANK0+8)& (0+127)
  1398  0011'                    end_of_initialization:	
  1399                           ;End of C runtime variable initialization code
  1400                           
  1401  0011'                    __end_of__initialization:
  1402  0011' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1403  0012' 0020               	movlb	0
  1404  0013' 2800'              	ljmp	_main	;jump to C main() function
  1405                           
  1406                           	psect	bssBANK0
  1407  0000'                    __pbssBANK0:
  1408  0000'                    _yellow_DC:
  1409  0000'                    	ds	2
  1410  0002'                    _white_DC:
  1411  0002'                    	ds	2
  1412  0004'                    _pot_temperature:
  1413  0004'                    	ds	2
  1414  0006'                    _pot_brightness:
  1415  0006'                    	ds	2
  1416  0008'                    _lightsEnableFlag:
  1417  0008'                    	ds	1
  1418                           
  1419                           	psect	dataBANK0
  1420  0000'                    __pdataBANK0:
  1421  0000'                    _white_ratio:
  1422  0000'                    	ds	4
  1423                           
  1424                           	psect	cstackCOMMON
  1425  0000'                    __pcstackCOMMON:
  1426  0000'                    ?_init:
  1427  0000'                    ?_init_interrtupt:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0000'                    ?_init_adc:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0000'                    ?_init_pwm:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0000'                    ?_main:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0000'                    ?_ISR:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0000'                    ??_ISR:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x0
  1447  0000'                    	ds	2
  1448  0002'                    ??_init:
  1449  0002'                    ??_init_interrtupt:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  0002'                    ??_init_adc:	
  1453                           ; 1 bytes @ 0x2
  1454                           
  1455  0002'                    ??_init_pwm:	
  1456                           ; 1 bytes @ 0x2
  1457                           
  1458  0002'                    ?_PWM_dc_set_white:	
  1459                           ; 1 bytes @ 0x2
  1460                           
  1461  0002'                    ?_PWM_dc_set_yellow:	
  1462                           ; 1 bytes @ 0x2
  1463                           
  1464  0002'                    ?_ADC_read:	
  1465                           ; 1 bytes @ 0x2
  1466                           
  1467  0002'                    ?__Umul8_16:	
  1468                           ; 2 bytes @ 0x2
  1469                           
  1470  0002'                    ?___awdiv:	
  1471                           ; 2 bytes @ 0x2
  1472                           
  1473  0002'                    __Umul8_16@multiplicand:	
  1474                           ; 2 bytes @ 0x2
  1475                           
  1476  0002'                    PWM_dc_set_white@duty_cycle:	
  1477                           ; 1 bytes @ 0x2
  1478                           
  1479  0002'                    PWM_dc_set_yellow@duty_cycle:	
  1480                           ; 2 bytes @ 0x2
  1481                           
  1482  0002'                    ___awdiv@divisor:	
  1483                           ; 2 bytes @ 0x2
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0x2
  1487  0002'                    	ds	2
  1488  0004'                    ??_ADC_read:
  1489  0004'                    ??_PWM_dc_set_white:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492  0004'                    ??_PWM_dc_set_yellow:	
  1493                           ; 1 bytes @ 0x4
  1494                           
  1495  0004'                    ??__Umul8_16:	
  1496                           ; 1 bytes @ 0x4
  1497                           
  1498  0004'                    ___awdiv@dividend:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501                           
  1502                           ; 2 bytes @ 0x4
  1503  0004'                    	ds	1
  1504  0005'                    ADC_read@result:
  1505                           
  1506                           ; 2 bytes @ 0x5
  1507  0005'                    	ds	1
  1508  0006'                    ??___awdiv:
  1509  0006'                    __Umul8_16@product:	
  1510                           ; 1 bytes @ 0x6
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x6
  1514  0006'                    	ds	1
  1515  0007'                    ADC_read@channel:
  1516  0007'                    ___awdiv@counter:	
  1517                           ; 1 bytes @ 0x7
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x7
  1521  0007'                    	ds	1
  1522  0008'                    ___awdiv@sign:
  1523  0008'                    __Umul8_16@word_mpld:	
  1524                           ; 1 bytes @ 0x8
  1525                           
  1526                           
  1527                           ; 2 bytes @ 0x8
  1528  0008'                    	ds	1
  1529  0009'                    ___awdiv@quotient:
  1530                           
  1531                           ; 2 bytes @ 0x9
  1532  0009'                    	ds	1
  1533  000A'                    __Umul8_16@multiplier:
  1534                           
  1535                           ; 1 bytes @ 0xA
  1536  000A'                    	ds	1
  1537                           
  1538                           	psect	cstackBANK0
  1539  0000'                    __pcstackBANK0:
  1540  0000'                    ?___xxtofl:
  1541  0000'                    ___xxtofl@val:	
  1542                           ; 4 bytes @ 0x0
  1543                           
  1544                           
  1545                           ; 4 bytes @ 0x0
  1546  0000'                    	ds	4
  1547  0004'                    ??___xxtofl:
  1548                           
  1549                           ; 1 bytes @ 0x4
  1550  0004'                    	ds	4
  1551  0008'                    ___xxtofl@sign:
  1552                           
  1553                           ; 1 bytes @ 0x8
  1554  0008'                    	ds	1
  1555  0009'                    ___xxtofl@exp:
  1556                           
  1557                           ; 1 bytes @ 0x9
  1558  0009'                    	ds	1
  1559  000A'                    ___xxtofl@arg:
  1560                           
  1561                           ; 4 bytes @ 0xA
  1562  000A'                    	ds	4
  1563  000E'                    ?___flmul:
  1564  000E'                    ___flmul@b:	
  1565                           ; 4 bytes @ 0xE
  1566                           
  1567                           
  1568                           ; 4 bytes @ 0xE
  1569  000E'                    	ds	4
  1570  0012'                    ___flmul@a:
  1571                           
  1572                           ; 4 bytes @ 0x12
  1573  0012'                    	ds	4
  1574  0016'                    ??___flmul:
  1575                           
  1576                           ; 1 bytes @ 0x16
  1577  0016'                    	ds	5
  1578  001B'                    ___flmul@sign:
  1579                           
  1580                           ; 1 bytes @ 0x1B
  1581  001B'                    	ds	1
  1582  001C'                    ___flmul@grs:
  1583                           
  1584                           ; 4 bytes @ 0x1C
  1585  001C'                    	ds	4
  1586  0020'                    ___flmul@aexp:
  1587                           
  1588                           ; 1 bytes @ 0x20
  1589  0020'                    	ds	1
  1590  0021'                    ___flmul@bexp:
  1591                           
  1592                           ; 1 bytes @ 0x21
  1593  0021'                    	ds	1
  1594  0022'                    ___flmul@prod:
  1595                           
  1596                           ; 4 bytes @ 0x22
  1597  0022'                    	ds	4
  1598  0026'                    ___flmul@temp:
  1599                           
  1600                           ; 2 bytes @ 0x26
  1601  0026'                    	ds	2
  1602  0028'                    ?___fltol:
  1603  0028'                    ___fltol@f1:	
  1604                           ; 4 bytes @ 0x28
  1605                           
  1606                           
  1607                           ; 4 bytes @ 0x28
  1608  0028'                    	ds	4
  1609  002C'                    ??___fltol:
  1610                           
  1611                           ; 1 bytes @ 0x2C
  1612  002C'                    	ds	5
  1613  0031'                    ___fltol@sign1:
  1614                           
  1615                           ; 1 bytes @ 0x31
  1616  0031'                    	ds	1
  1617  0032'                    ___fltol@exp1:
  1618                           
  1619                           ; 1 bytes @ 0x32
  1620  0032'                    	ds	1
  1621  0033'                    ??_main:
  1622                           
  1623                           ; 1 bytes @ 0x33
  1624  0033'                    	ds	2
  1625                           
  1626                           	psect	maintext
  1627  0000'                    __pmaintext:	
  1628 ;;
  1629 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1630 ;;
  1631 ;; *************** function _main *****************
  1632 ;; Defined at:
  1633 ;;		line 8 in file "main.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : B1F/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1
  1647 ;;      Params:         0       0       0
  1648 ;;      Locals:         0       0       0
  1649 ;;      Temps:          0       2       0
  1650 ;;      Totals:         0       2       0
  1651 ;;Total ram usage:        2 bytes
  1652 ;; Hardware stack levels required when called: 3
  1653 ;; This function calls:
  1654 ;;		_ADC_read
  1655 ;;		_PWM_dc_set_white
  1656 ;;		_PWM_dc_set_yellow
  1657 ;;		___awdiv
  1658 ;;		___flmul
  1659 ;;		___fltol
  1660 ;;		___xxtofl
  1661 ;;		_init
  1662 ;;		_init_adc
  1663 ;;		_init_interrtupt
  1664 ;;		_init_pwm
  1665 ;; This function is called by:
  1666 ;;		Startup code after reset
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670  0000'                    _main:	
  1671                           ;psect for function _main
  1672                           
  1673                           
  1674                           ;main.c: 11:     init();
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1678  0000' 2000'              	fcall	_init
  1679                           
  1680                           ;main.c: 12:     init_interrtupt();
  1681  0001' 2000'              	fcall	_init_interrtupt
  1682                           
  1683                           ;main.c: 13:     init_adc();
  1684  0002' 2000'              	fcall	_init_adc
  1685                           
  1686                           ;main.c: 14:     init_pwm();
  1687  0003' 2000'              	fcall	_init_pwm
  1688  0004'                    l1351:
  1689                           
  1690                           ;main.c: 19:         if(lightsEnableFlag == 1){
  1691  0004' 0020               	movlb	0	; select bank0
  1692  0005' 0308'              	decf	_lightsEnableFlag,w	;volatile
  1693  0006' 1D03               	btfss	3,2
  1694  0007' 2871'              	goto	l1361
  1695                           
  1696                           ;main.c: 22:             pot_brightness = ADC_read(0);
  1697  0008' 3000               	movlw	0
  1698  0009' 2000'              	fcall	_ADC_read
  1699  000A' 0803'              	movf	?_ADC_read+1,w
  1700  000B' 0020               	movlb	0	; select bank0
  1701  000C' 0087'              	movwf	_pot_brightness+1
  1702  000D' 0802'              	movf	?_ADC_read,w
  1703  000E' 0086'              	movwf	_pot_brightness
  1704                           
  1705                           ;main.c: 23:             pot_temperature = ADC_read(1);
  1706  000F' 3001               	movlw	1
  1707  0010' 2000'              	fcall	_ADC_read
  1708  0011' 0803'              	movf	?_ADC_read+1,w
  1709  0012' 0020               	movlb	0	; select bank0
  1710  0013' 0085'              	movwf	_pot_temperature+1
  1711  0014' 0802'              	movf	?_ADC_read,w
  1712  0015' 0084'              	movwf	_pot_temperature
  1713                           
  1714                           ;main.c: 26:             white_ratio = pot_temperature/1023;
  1715  0016' 0805'              	movf	_pot_temperature+1,w
  1716  0017' 0085'              	movwf	___awdiv@dividend+1
  1717  0018' 0804'              	movf	_pot_temperature,w
  1718  0019' 0084'              	movwf	___awdiv@dividend
  1719  001A' 30FF               	movlw	255
  1720  001B' 0082'              	movwf	___awdiv@divisor
  1721  001C' 3003               	movlw	3
  1722  001D' 0083'              	movwf	___awdiv@divisor+1
  1723  001E' 2000'              	fcall	___awdiv
  1724  001F' 0802'              	movf	?___awdiv,w
  1725  0020' 0020               	movlb	0	; select bank0
  1726  0021' 0080'              	movwf	___xxtofl@val
  1727  0022' 0803'              	movf	?___awdiv+1,w
  1728  0023' 0081'              	movwf	___xxtofl@val+1
  1729  0024' 0D89               	rlf	9,f
  1730  0025' 3B89               	subwfb	9,f
  1731  0026' 0989               	comf	9,f
  1732  0027' 0082'              	movwf	___xxtofl@val+2
  1733  0028' 0083'              	movwf	___xxtofl@val+3
  1734  0029' 3001               	movlw	1
  1735  002A' 2000'              	fcall	___xxtofl
  1736  002B' 0020               	movlb	0	; select bank0
  1737  002C' 0803'              	movf	?___xxtofl+3,w
  1738  002D' 0083'              	movwf	_white_ratio+3
  1739  002E' 0802'              	movf	?___xxtofl+2,w
  1740  002F' 0082'              	movwf	_white_ratio+2
  1741  0030' 0801'              	movf	?___xxtofl+1,w
  1742  0031' 0081'              	movwf	_white_ratio+1
  1743  0032' 0800'              	movf	?___xxtofl,w
  1744  0033' 0080'              	movwf	_white_ratio
  1745                           
  1746                           ;main.c: 29:             white_DC = (int)(pot_brightness * white_ratio);
  1747  0034' 0806'              	movf	_pot_brightness,w
  1748  0035' 0080'              	movwf	___xxtofl@val
  1749  0036' 0807'              	movf	_pot_brightness+1,w
  1750  0037' 0081'              	movwf	___xxtofl@val+1
  1751  0038' 0D89               	rlf	9,f
  1752  0039' 3B89               	subwfb	9,f
  1753  003A' 0989               	comf	9,f
  1754  003B' 0082'              	movwf	___xxtofl@val+2
  1755  003C' 0083'              	movwf	___xxtofl@val+3
  1756  003D' 3001               	movlw	1
  1757  003E' 2000'              	fcall	___xxtofl
  1758  003F' 0020               	movlb	0	; select bank0
  1759  0040' 0803'              	movf	?___xxtofl+3,w
  1760  0041' 0095'              	movwf	___flmul@a+3
  1761  0042' 0802'              	movf	?___xxtofl+2,w
  1762  0043' 0094'              	movwf	___flmul@a+2
  1763  0044' 0801'              	movf	?___xxtofl+1,w
  1764  0045' 0093'              	movwf	___flmul@a+1
  1765  0046' 0800'              	movf	?___xxtofl,w
  1766  0047' 0092'              	movwf	___flmul@a
  1767  0048' 0803'              	movf	_white_ratio+3,w
  1768  0049' 0091'              	movwf	___flmul@b+3
  1769  004A' 0802'              	movf	_white_ratio+2,w
  1770  004B' 0090'              	movwf	___flmul@b+2
  1771  004C' 0801'              	movf	_white_ratio+1,w
  1772  004D' 008F'              	movwf	___flmul@b+1
  1773  004E' 0800'              	movf	_white_ratio,w
  1774  004F' 008E'              	movwf	___flmul@b
  1775  0050' 2000'              	fcall	___flmul
  1776  0051' 0020               	movlb	0	; select bank0
  1777  0052' 0811'              	movf	?___flmul+3,w
  1778  0053' 00AB'              	movwf	___fltol@f1+3
  1779  0054' 0810'              	movf	?___flmul+2,w
  1780  0055' 00AA'              	movwf	___fltol@f1+2
  1781  0056' 080F'              	movf	?___flmul+1,w
  1782  0057' 00A9'              	movwf	___fltol@f1+1
  1783  0058' 080E'              	movf	?___flmul,w
  1784  0059' 00A8'              	movwf	___fltol@f1
  1785  005A' 2000'              	fcall	___fltol
  1786  005B' 0020               	movlb	0	; select bank0
  1787  005C' 0829'              	movf	?___fltol+1,w
  1788  005D' 0083'              	movwf	_white_DC+1
  1789  005E' 0828'              	movf	?___fltol,w
  1790  005F' 0082'              	movwf	_white_DC
  1791                           
  1792                           ;main.c: 32:             yellow_DC = pot_brightness - white_DC;
  1793  0060' 0802'              	movf	_white_DC,w
  1794  0061' 0206'              	subwf	_pot_brightness,w
  1795  0062' 0080'              	movwf	_yellow_DC
  1796  0063' 0803'              	movf	_white_DC+1,w
  1797  0064' 3B07'              	subwfb	_pot_brightness+1,w
  1798  0065' 0081'              	movwf	_yellow_DC+1
  1799                           
  1800                           ;main.c: 35:             PWM_dc_set_white(white_DC);
  1801  0066' 0803'              	movf	_white_DC+1,w
  1802  0067' 0083'              	movwf	PWM_dc_set_white@duty_cycle+1
  1803  0068' 0802'              	movf	_white_DC,w
  1804  0069' 0082'              	movwf	PWM_dc_set_white@duty_cycle
  1805  006A' 2000'              	fcall	_PWM_dc_set_white
  1806                           
  1807                           ;main.c: 36:             PWM_dc_set_yellow(yellow_DC);
  1808  006B' 0020               	movlb	0	; select bank0
  1809  006C' 0801'              	movf	_yellow_DC+1,w
  1810  006D' 0083'              	movwf	PWM_dc_set_yellow@duty_cycle+1
  1811  006E' 0800'              	movf	_yellow_DC,w
  1812  006F' 0082'              	movwf	PWM_dc_set_yellow@duty_cycle
  1813  0070' 2878'              	goto	L1
  1814  0071'                    l1361:	
  1815                           ;main.c: 38:         }
  1816                           
  1817                           
  1818                           ;main.c: 41:             PWM_dc_set_white(0);
  1819  0071' 3000               	movlw	0
  1820  0072' 0082'              	movwf	PWM_dc_set_white@duty_cycle
  1821  0073' 0083'              	movwf	PWM_dc_set_white@duty_cycle+1
  1822  0074' 2000'              	fcall	_PWM_dc_set_white
  1823                           
  1824                           ;main.c: 42:             PWM_dc_set_yellow(0);
  1825  0075' 3000               	movlw	0
  1826  0076' 0082'              	movwf	PWM_dc_set_yellow@duty_cycle
  1827  0077' 0083'              	movwf	PWM_dc_set_yellow@duty_cycle+1
  1828  0078'                    L1:
  1829  0078' 2000'              	fcall	_PWM_dc_set_yellow
  1830                           
  1831                           ;main.c: 46:         _delay((unsigned long)((25)*(32000000/4000.0)));
  1832  0079' 3002               	movlw	2
  1833  007A' 0020               	movlb	0	; select bank0
  1834  007B' 00B4'              	movwf	??_main+1
  1835  007C' 3004               	movlw	4
  1836  007D' 00B3'              	movwf	??_main
  1837  007E' 30BA               	movlw	186
  1838  007F'                    u1437:
  1839  007F' 0B89               	decfsz	9,f
  1840  0080' 287F'              	goto	u1437
  1841  0081' 0BB3'              	decfsz	??_main,f
  1842  0082' 287F'              	goto	u1437
  1843  0083' 0BB4'              	decfsz	??_main+1,f
  1844  0084' 287F'              	goto	u1437
  1845  0085' 0000               	nop
  1846  0086' 2804'              	goto	l1351
  1847  0087'                    __end_of_main:
  1848                           
  1849                           	psect	text1
  1850  0000'                    __ptext1:	
  1851 ;; *************** function _init_pwm *****************
  1852 ;; Defined at:
  1853 ;;		line 6 in file "init_pwm.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1
  1867 ;;      Params:         0       0       0
  1868 ;;      Locals:         0       0       0
  1869 ;;      Temps:          0       0       0
  1870 ;;      Totals:         0       0       0
  1871 ;;Total ram usage:        0 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 1
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881  0000'                    _init_pwm:	
  1882                           ;psect for function _init_pwm
  1883                           
  1884                           
  1885                           ;init_pwm.c: 13:     PWM1CON = 0b11000000;
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _init_pwm: [wreg+status,2]
  1889  0000' 30C0               	movlw	192
  1890  0001' 003B               	movlb	27	; select bank27
  1891  0002' 009B               	movwf	27	;volatile
  1892                           
  1893                           ;init_pwm.c: 14:     PWM2CON = 0b11000000;
  1894  0003' 30C0               	movlw	192
  1895  0004' 00AB               	movwf	43	;volatile
  1896                           
  1897                           ;init_pwm.c: 20:     PWM1CLKCON = 0b00110000;
  1898  0005' 3030               	movlw	48
  1899  0006' 009E               	movwf	30	;volatile
  1900                           
  1901                           ;init_pwm.c: 21:     PWM2CLKCON = 0b00110000;
  1902  0007' 3030               	movlw	48
  1903  0008' 00AE               	movwf	46	;volatile
  1904                           
  1905                           ;init_pwm.c: 24:     PWM1PR = 1022;
  1906  0009' 3003               	movlw	3
  1907  000A' 0096               	movwf	22	;volatile
  1908  000B' 30FE               	movlw	254
  1909  000C' 0095               	movwf	21	;volatile
  1910                           
  1911                           ;init_pwm.c: 25:     PWM2PR = 1022;
  1912  000D' 3003               	movlw	3
  1913  000E' 00A6               	movwf	38	;volatile
  1914  000F' 30FE               	movlw	254
  1915  0010' 00A5               	movwf	37	;volatile
  1916                           
  1917                           ;init_pwm.c: 28:     PWM1PH = 0;
  1918  0011' 0191               	clrf	17	;volatile
  1919  0012' 0192               	clrf	18	;volatile
  1920                           
  1921                           ;init_pwm.c: 29:     PWM2PH = 0;
  1922  0013' 01A1               	clrf	33	;volatile
  1923  0014' 01A2               	clrf	34	;volatile
  1924                           
  1925                           ;init_pwm.c: 32:     PWM1DC = 0;
  1926  0015' 0193               	clrf	19	;volatile
  1927  0016' 0194               	clrf	20	;volatile
  1928                           
  1929                           ;init_pwm.c: 33:     PWM2DC = 0;
  1930  0017' 01A3               	clrf	35	;volatile
  1931  0018' 01A4               	clrf	36	;volatile
  1932  0019' 0008               	return
  1933  001A'                    __end_of_init_pwm:
  1934                           
  1935                           	psect	text2
  1936  0000'                    __ptext2:	
  1937 ;; *************** function _init_interrtupt *****************
  1938 ;; Defined at:
  1939 ;;		line 7 in file "init_interrupt.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1
  1953 ;;      Params:         0       0       0
  1954 ;;      Locals:         0       0       0
  1955 ;;      Temps:          0       0       0
  1956 ;;      Totals:         0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967  0000'                    _init_interrtupt:	
  1968                           ;psect for function _init_interrtupt
  1969                           
  1970                           
  1971                           ;init_interrupt.c: 11:     INTCON = 0b11010000;
  1972                           
  1973                           ;incstack = 0
  1974                           ; Regs used in _init_interrtupt: [wreg]
  1975  0000' 30D0               	movlw	208
  1976  0001' 008B               	movwf	11	;volatile
  1977  0002' 0008               	return
  1978  0003'                    __end_of_init_interrtupt:
  1979                           
  1980                           	psect	text3
  1981  0000'                    __ptext3:	
  1982 ;; *************** function _init_adc *****************
  1983 ;; Defined at:
  1984 ;;		line 7 in file "init_adc.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;		None
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1
  1998 ;;      Params:         0       0       0
  1999 ;;      Locals:         0       0       0
  2000 ;;      Temps:          0       0       0
  2001 ;;      Totals:         0       0       0
  2002 ;;Total ram usage:        0 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 1
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012  0000'                    _init_adc:	
  2013                           ;psect for function _init_adc
  2014                           
  2015                           
  2016                           ;init_adc.c: 14:     ADCON1 = 0b11100011;
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _init_adc: [wreg]
  2020  0000' 30E3               	movlw	227
  2021  0001' 0021               	movlb	1	; select bank1
  2022  0002' 009E               	movwf	30	;volatile
  2023                           
  2024                           ;init_adc.c: 20:     ADCON0 = 0b00000001;
  2025  0003' 3001               	movlw	1
  2026  0004' 009D               	movwf	29	;volatile
  2027                           
  2028                           ;init_adc.c: 26:     FVRCON = 0b10000011;
  2029  0005' 3083               	movlw	131
  2030  0006' 0022               	movlb	2	; select bank2
  2031  0007' 0097               	movwf	23	;volatile
  2032  0008' 0008               	return
  2033  0009'                    __end_of_init_adc:
  2034                           
  2035                           	psect	text4
  2036  0000'                    __ptext4:	
  2037 ;; *************** function _init *****************
  2038 ;; Defined at:
  2039 ;;		line 7 in file "init.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1
  2053 ;;      Params:         0       0       0
  2054 ;;      Locals:         0       0       0
  2055 ;;      Temps:          0       0       0
  2056 ;;      Totals:         0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067  0000'                    _init:	
  2068                           ;psect for function _init
  2069                           
  2070                           
  2071                           ;init.c: 10:     OSCCON = 0b11110000;
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _init: [wreg]
  2075  0000' 30F0               	movlw	240
  2076  0001' 0021               	movlb	1	; select bank1
  2077  0002' 0099               	movwf	25	;volatile
  2078                           
  2079                           ;init.c: 13:     TRISA = 0b00000111;
  2080  0003' 3007               	movlw	7
  2081  0004' 008C               	movwf	12	;volatile
  2082                           
  2083                           ;init.c: 16:     ANSELA = 0b00000011;
  2084  0005' 3003               	movlw	3
  2085  0006' 0023               	movlb	3	; select bank3
  2086  0007' 008C               	movwf	12	;volatile
  2087                           
  2088                           ;init.c: 19:     APFCON = 0b00000011;
  2089  0008' 3003               	movlw	3
  2090  0009' 0022               	movlb	2	; select bank2
  2091  000A' 009D               	movwf	29	;volatile
  2092  000B' 0008               	return
  2093  000C'                    __end_of_init:
  2094                           
  2095                           	psect	text5
  2096  0000'                    __ptext5:	
  2097 ;; *************** function ___xxtofl *****************
  2098 ;; Defined at:
  2099 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  sign            1    wreg     unsigned char 
  2102 ;;  val             4    0[BANK0 ] long 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  sign            1    8[BANK0 ] unsigned char 
  2105 ;;  arg             4   10[BANK0 ] unsigned long 
  2106 ;;  exp             1    9[BANK0 ] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  4    0[BANK0 ] unsigned char 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1
  2116 ;;      Params:         0       4       0
  2117 ;;      Locals:         0       6       0
  2118 ;;      Temps:          0       4       0
  2119 ;;      Totals:         0      14       0
  2120 ;;Total ram usage:       14 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130  0000'                    ___xxtofl:	
  2131                           ;psect for function ___xxtofl
  2132                           
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2136                           ;___xxtofl@sign stored from wreg
  2137  0000' 0020               	movlb	0	; select bank0
  2138  0001' 0088'              	movwf	___xxtofl@sign
  2139  0002' 0808'              	movf	___xxtofl@sign,w
  2140  0003' 1D03               	btfss	3,2
  2141  0004' 1F83'              	btfss	___xxtofl@val+3,7
  2142  0005' 2816'              	goto	l1311
  2143  0006' 0900'              	comf	___xxtofl@val,w
  2144  0007' 008A'              	movwf	___xxtofl@arg
  2145  0008' 0901'              	comf	___xxtofl@val+1,w
  2146  0009' 008B'              	movwf	___xxtofl@arg+1
  2147  000A' 0902'              	comf	___xxtofl@val+2,w
  2148  000B' 008C'              	movwf	___xxtofl@arg+2
  2149  000C' 0903'              	comf	___xxtofl@val+3,w
  2150  000D' 008D'              	movwf	___xxtofl@arg+3
  2151  000E' 0A8A'              	incf	___xxtofl@arg,f
  2152  000F' 1903               	skipnz
  2153  0010' 0A8B'              	incf	___xxtofl@arg+1,f
  2154  0011' 1903               	skipnz
  2155  0012' 0A8C'              	incf	___xxtofl@arg+2,f
  2156  0013' 1903               	skipnz
  2157  0014' 0A8D'              	incf	___xxtofl@arg+3,f
  2158  0015' 281E'              	goto	l646
  2159  0016'                    l1311:
  2160  0016' 0803'              	movf	___xxtofl@val+3,w
  2161  0017' 008D'              	movwf	___xxtofl@arg+3
  2162  0018' 0802'              	movf	___xxtofl@val+2,w
  2163  0019' 008C'              	movwf	___xxtofl@arg+2
  2164  001A' 0801'              	movf	___xxtofl@val+1,w
  2165  001B' 008B'              	movwf	___xxtofl@arg+1
  2166  001C' 0800'              	movf	___xxtofl@val,w
  2167  001D' 008A'              	movwf	___xxtofl@arg
  2168  001E'                    l646:
  2169  001E' 0803'              	movf	___xxtofl@val+3,w
  2170  001F' 0402'              	iorwf	___xxtofl@val+2,w
  2171  0020' 0401'              	iorwf	___xxtofl@val+1,w
  2172  0021' 0400'              	iorwf	___xxtofl@val,w
  2173  0022' 1D03               	skipz
  2174  0023' 282D'              	goto	l1317
  2175  0024' 3000               	movlw	0
  2176  0025' 0083'              	movwf	?___xxtofl+3
  2177  0026' 3000               	movlw	0
  2178  0027' 0082'              	movwf	?___xxtofl+2
  2179  0028' 3000               	movlw	0
  2180  0029' 0081'              	movwf	?___xxtofl+1
  2181  002A' 3000               	movlw	0
  2182  002B' 0080'              	movwf	?___xxtofl
  2183  002C' 0008               	return
  2184  002D'                    l1317:
  2185  002D' 3096               	movlw	150
  2186  002E' 0084'              	movwf	??___xxtofl
  2187  002F' 0804'              	movf	??___xxtofl,w
  2188  0030' 0089'              	movwf	___xxtofl@exp
  2189  0031'                    l1321:
  2190  0031' 30FE               	movlw	254
  2191  0032' 050D'              	andwf	___xxtofl@arg+3,w
  2192  0033' 1903               	btfsc	3,2
  2193  0034' 2854'              	goto	l652
  2194  0035' 3001               	movlw	1
  2195  0036' 0084'              	movwf	??___xxtofl
  2196  0037' 0804'              	movf	??___xxtofl,w
  2197  0038' 0789'              	addwf	___xxtofl@exp,f
  2198  0039' 3001               	movlw	1
  2199  003A'                    u1295:
  2200  003A' 368D'              	lsrf	___xxtofl@arg+3,f
  2201  003B' 0C8C'              	rrf	___xxtofl@arg+2,f
  2202  003C' 0C8B'              	rrf	___xxtofl@arg+1,f
  2203  003D' 0C8A'              	rrf	___xxtofl@arg,f
  2204  003E' 0B89               	decfsz	9,f
  2205  003F' 283A'              	goto	u1295
  2206  0040' 2831'              	goto	l1321
  2207  0041'                    l1323:
  2208  0041' 3001               	movlw	1
  2209  0042' 0084'              	movwf	??___xxtofl
  2210  0043' 0804'              	movf	??___xxtofl,w
  2211  0044' 0789'              	addwf	___xxtofl@exp,f
  2212  0045' 3001               	movlw	1
  2213  0046' 078A'              	addwf	___xxtofl@arg,f
  2214  0047' 3000               	movlw	0
  2215  0048' 3D8B'              	addwfc	___xxtofl@arg+1,f
  2216  0049' 3000               	movlw	0
  2217  004A' 3D8C'              	addwfc	___xxtofl@arg+2,f
  2218  004B' 3000               	movlw	0
  2219  004C' 3D8D'              	addwfc	___xxtofl@arg+3,f
  2220  004D' 3001               	movlw	1
  2221  004E'                    u1315:
  2222  004E' 368D'              	lsrf	___xxtofl@arg+3,f
  2223  004F' 0C8C'              	rrf	___xxtofl@arg+2,f
  2224  0050' 0C8B'              	rrf	___xxtofl@arg+1,f
  2225  0051' 0C8A'              	rrf	___xxtofl@arg,f
  2226  0052' 0B89               	decfsz	9,f
  2227  0053' 284E'              	goto	u1315
  2228  0054'                    l652:
  2229  0054' 30FF               	movlw	255
  2230  0055' 050D'              	andwf	___xxtofl@arg+3,w
  2231  0056' 1903               	btfsc	3,2
  2232  0057' 2866'              	goto	l1331
  2233  0058' 2841'              	goto	l1323
  2234  0059'                    l1333:
  2235  0059' 3002               	movlw	2
  2236  005A' 0209'              	subwf	___xxtofl@exp,w
  2237  005B' 1C03               	btfss	3,0
  2238  005C' 2868'              	goto	l659
  2239  005D' 3001               	movlw	1
  2240  005E' 0289'              	subwf	___xxtofl@exp,f
  2241  005F' 3001               	movlw	1
  2242  0060'                    u1335:
  2243  0060' 358A'              	lslf	___xxtofl@arg,f
  2244  0061' 0D8B'              	rlf	___xxtofl@arg+1,f
  2245  0062' 0D8C'              	rlf	___xxtofl@arg+2,f
  2246  0063' 0D8D'              	rlf	___xxtofl@arg+3,f
  2247  0064' 0B89               	decfsz	9,f
  2248  0065' 2860'              	goto	u1335
  2249  0066'                    l1331:
  2250  0066' 1F8C'              	btfss	___xxtofl@arg+2,7
  2251  0067' 2859'              	goto	l1333
  2252  0068'                    l659:
  2253  0068' 1809'              	btfsc	___xxtofl@exp,0
  2254  0069' 2872'              	goto	l660
  2255  006A' 30FF               	movlw	255
  2256  006B' 058A'              	andwf	___xxtofl@arg,f
  2257  006C' 30FF               	movlw	255
  2258  006D' 058B'              	andwf	___xxtofl@arg+1,f
  2259  006E' 307F               	movlw	127
  2260  006F' 058C'              	andwf	___xxtofl@arg+2,f
  2261  0070' 30FF               	movlw	255
  2262  0071' 058D'              	andwf	___xxtofl@arg+3,f
  2263  0072'                    l660:
  2264  0072' 1003               	clrc
  2265  0073' 0C89'              	rrf	___xxtofl@exp,f
  2266  0074' 0809'              	movf	___xxtofl@exp,w
  2267  0075' 0084'              	movwf	??___xxtofl
  2268  0076' 0185'              	clrf	??___xxtofl+1
  2269  0077' 0186'              	clrf	??___xxtofl+2
  2270  0078' 0187'              	clrf	??___xxtofl+3
  2271  0079' 3018               	movlw	24
  2272  007A'                    u1375:
  2273  007A' 3584'              	lslf	??___xxtofl,f
  2274  007B' 0D85'              	rlf	??___xxtofl+1,f
  2275  007C' 0D86'              	rlf	??___xxtofl+2,f
  2276  007D' 0D87'              	rlf	??___xxtofl+3,f
  2277  007E' 0B89               	decfsz	9,f
  2278  007F' 287A'              	goto	u1375
  2279  0080' 0804'              	movf	??___xxtofl,w
  2280  0081' 048A'              	iorwf	___xxtofl@arg,f
  2281  0082' 0805'              	movf	??___xxtofl+1,w
  2282  0083' 048B'              	iorwf	___xxtofl@arg+1,f
  2283  0084' 0806'              	movf	??___xxtofl+2,w
  2284  0085' 048C'              	iorwf	___xxtofl@arg+2,f
  2285  0086' 0807'              	movf	??___xxtofl+3,w
  2286  0087' 048D'              	iorwf	___xxtofl@arg+3,f
  2287  0088' 0808'              	movf	___xxtofl@sign,w
  2288  0089' 1D03               	btfss	3,2
  2289  008A' 1F83'              	btfss	___xxtofl@val+3,7
  2290  008B' 288D'              	goto	l1345
  2291  008C' 178D'              	bsf	___xxtofl@arg+3,7
  2292  008D'                    l1345:
  2293  008D' 080D'              	movf	___xxtofl@arg+3,w
  2294  008E' 0083'              	movwf	?___xxtofl+3
  2295  008F' 080C'              	movf	___xxtofl@arg+2,w
  2296  0090' 0082'              	movwf	?___xxtofl+2
  2297  0091' 080B'              	movf	___xxtofl@arg+1,w
  2298  0092' 0081'              	movwf	?___xxtofl+1
  2299  0093' 080A'              	movf	___xxtofl@arg,w
  2300  0094' 0080'              	movwf	?___xxtofl
  2301  0095' 0008               	return
  2302  0096'                    __end_of___xxtofl:
  2303                           
  2304                           	psect	text6
  2305  0000'                    __ptext6:	
  2306 ;; *************** function ___fltol *****************
  2307 ;; Defined at:
  2308 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  f1              4   40[BANK0 ] unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  exp1            1   50[BANK0 ] unsigned char 
  2313 ;;  sign1           1   49[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  4   40[BANK0 ] long 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1
  2323 ;;      Params:         0       4       0
  2324 ;;      Locals:         0       2       0
  2325 ;;      Temps:          0       5       0
  2326 ;;      Totals:         0      11       0
  2327 ;;Total ram usage:       11 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337  0000'                    ___fltol:	
  2338                           ;psect for function ___fltol
  2339                           
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2343  0000' 1003               	clrc
  2344  0001' 0020               	movlb	0	; select bank0
  2345  0002' 0D2A'              	rlf	___fltol@f1+2,w
  2346  0003' 0D2B'              	rlf	___fltol@f1+3,w
  2347  0004' 00AC'              	movwf	??___fltol
  2348  0005' 082C'              	movf	??___fltol,w
  2349  0006' 00B2'              	movwf	___fltol@exp1
  2350  0007' 0832'              	movf	___fltol@exp1,w
  2351  0008' 1D03               	btfss	3,2
  2352  0009' 2813'              	goto	l1135
  2353  000A'                    l1131:
  2354  000A' 3000               	movlw	0
  2355  000B' 00AB'              	movwf	?___fltol+3
  2356  000C' 3000               	movlw	0
  2357  000D' 00AA'              	movwf	?___fltol+2
  2358  000E' 3000               	movlw	0
  2359  000F' 00A9'              	movwf	?___fltol+1
  2360  0010' 3000               	movlw	0
  2361  0011' 00A8'              	movwf	?___fltol
  2362  0012' 0008               	return
  2363  0013'                    l1135:
  2364  0013' 0828'              	movf	___fltol@f1,w
  2365  0014' 00AC'              	movwf	??___fltol
  2366  0015' 0829'              	movf	___fltol@f1+1,w
  2367  0016' 00AD'              	movwf	??___fltol+1
  2368  0017' 082A'              	movf	___fltol@f1+2,w
  2369  0018' 00AE'              	movwf	??___fltol+2
  2370  0019' 082B'              	movf	___fltol@f1+3,w
  2371  001A' 00AF'              	movwf	??___fltol+3
  2372  001B' 301F               	movlw	31
  2373  001C'                    u915:
  2374  001C' 36AF'              	lsrf	??___fltol+3,f
  2375  001D' 0CAE'              	rrf	??___fltol+2,f
  2376  001E' 0CAD'              	rrf	??___fltol+1,f
  2377  001F' 0CAC'              	rrf	??___fltol,f
  2378  0020' 0B89               	decfsz	9,f
  2379  0021' 281C'              	goto	u915
  2380  0022' 082C'              	movf	??___fltol,w
  2381  0023' 00B0'              	movwf	??___fltol+4
  2382  0024' 0830'              	movf	??___fltol+4,w
  2383  0025' 00B1'              	movwf	___fltol@sign1
  2384  0026' 17AA'              	bsf	___fltol@f1+2,7
  2385  0027' 30FF               	movlw	255
  2386  0028' 05A8'              	andwf	___fltol@f1,f
  2387  0029' 30FF               	movlw	255
  2388  002A' 05A9'              	andwf	___fltol@f1+1,f
  2389  002B' 30FF               	movlw	255
  2390  002C' 05AA'              	andwf	___fltol@f1+2,f
  2391  002D' 3000               	movlw	0
  2392  002E' 05AB'              	andwf	___fltol@f1+3,f
  2393  002F' 3096               	movlw	150
  2394  0030' 02B2'              	subwf	___fltol@exp1,f
  2395  0031' 1FB2'              	btfss	___fltol@exp1,7
  2396  0032' 2846'              	goto	l1153
  2397  0033' 0832'              	movf	___fltol@exp1,w
  2398  0034' 3A80               	xorlw	128
  2399  0035' 3E97               	addlw	151
  2400  0036' 1C03               	btfss	3,0
  2401  0037' 280A'              	goto	l1131
  2402  0038'                    l1151:
  2403  0038' 3001               	movlw	1
  2404  0039'                    u945:
  2405  0039' 36AB'              	lsrf	___fltol@f1+3,f
  2406  003A' 0CAA'              	rrf	___fltol@f1+2,f
  2407  003B' 0CA9'              	rrf	___fltol@f1+1,f
  2408  003C' 0CA8'              	rrf	___fltol@f1,f
  2409  003D' 0B89               	decfsz	9,f
  2410  003E' 2839'              	goto	u945
  2411  003F' 3001               	movlw	1
  2412  0040' 00AC'              	movwf	??___fltol
  2413  0041' 082C'              	movf	??___fltol,w
  2414  0042' 07B2'              	addwf	___fltol@exp1,f
  2415  0043' 1903               	btfsc	3,2
  2416  0044' 2857'              	goto	l1161
  2417  0045' 2838'              	goto	l1151
  2418  0046'                    l1153:
  2419  0046' 3020               	movlw	32
  2420  0047' 0232'              	subwf	___fltol@exp1,w
  2421  0048' 1803               	btfsc	3,0
  2422  0049' 280A'              	goto	l1131
  2423  004A'                    l406:
  2424  004A' 0832'              	movf	___fltol@exp1,w
  2425  004B' 1903               	btfsc	3,2
  2426  004C' 2857'              	goto	l1161
  2427  004D' 3001               	movlw	1
  2428  004E'                    u975:
  2429  004E' 35A8'              	lslf	___fltol@f1,f
  2430  004F' 0DA9'              	rlf	___fltol@f1+1,f
  2431  0050' 0DAA'              	rlf	___fltol@f1+2,f
  2432  0051' 0DAB'              	rlf	___fltol@f1+3,f
  2433  0052' 0B89               	decfsz	9,f
  2434  0053' 284E'              	goto	u975
  2435  0054' 3001               	movlw	1
  2436  0055' 02B2'              	subwf	___fltol@exp1,f
  2437  0056' 284A'              	goto	l406
  2438  0057'                    l1161:
  2439  0057' 0831'              	movf	___fltol@sign1,w
  2440  0058' 1903               	btfsc	3,2
  2441  0059' 0008               	return
  2442  005A' 09A8'              	comf	___fltol@f1,f
  2443  005B' 09A9'              	comf	___fltol@f1+1,f
  2444  005C' 09AA'              	comf	___fltol@f1+2,f
  2445  005D' 09AB'              	comf	___fltol@f1+3,f
  2446  005E' 0AA8'              	incf	___fltol@f1,f
  2447  005F' 1903               	skipnz
  2448  0060' 0AA9'              	incf	___fltol@f1+1,f
  2449  0061' 1903               	skipnz
  2450  0062' 0AAA'              	incf	___fltol@f1+2,f
  2451  0063' 1903               	skipnz
  2452  0064' 0AAB'              	incf	___fltol@f1+3,f
  2453  0065' 0008               	return
  2454  0066'                    __end_of___fltol:
  2455                           
  2456                           	psect	text7
  2457  0000'                    __ptext7:	
  2458 ;; *************** function ___flmul *****************
  2459 ;; Defined at:
  2460 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  b               4   14[BANK0 ] long 
  2463 ;;  a               4   18[BANK0 ] long 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  prod            4   34[BANK0 ] struct .
  2466 ;;  grs             4   28[BANK0 ] unsigned long 
  2467 ;;  temp            2   38[BANK0 ] struct .
  2468 ;;  bexp            1   33[BANK0 ] unsigned char 
  2469 ;;  aexp            1   32[BANK0 ] unsigned char 
  2470 ;;  sign            1   27[BANK0 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  4   14[BANK0 ] unsigned char 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1
  2480 ;;      Params:         0       8       0
  2481 ;;      Locals:         0      13       0
  2482 ;;      Temps:          0       5       0
  2483 ;;      Totals:         0      26       0
  2484 ;;Total ram usage:       26 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 2
  2487 ;; This function calls:
  2488 ;;		__Umul8_16
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494  0000'                    ___flmul:	
  2495                           ;psect for function ___flmul
  2496                           
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  2500  0000' 0020               	movlb	0	; select bank0
  2501  0001' 0811'              	movf	___flmul@b+3,w
  2502  0002' 3980               	andlw	128
  2503  0003' 0096'              	movwf	??___flmul
  2504  0004' 0816'              	movf	??___flmul,w
  2505  0005' 009B'              	movwf	___flmul@sign
  2506  0006' 3511'              	lslf	___flmul@b+3,w
  2507  0007' 0096'              	movwf	??___flmul
  2508  0008' 0816'              	movf	??___flmul,w
  2509  0009' 00A1'              	movwf	___flmul@bexp
  2510  000A' 1B90'              	btfsc	___flmul@b+2,7
  2511  000B' 1421'              	bsf	___flmul@bexp,0
  2512  000C' 0821'              	movf	___flmul@bexp,w
  2513  000D' 1903               	btfsc	3,2
  2514  000E' 281C'              	goto	l1181
  2515  000F' 0A21'              	incf	___flmul@bexp,w
  2516  0010' 1D03               	btfss	3,2
  2517  0011' 281A'              	goto	l1179
  2518  0012' 3000               	movlw	0
  2519  0013' 0091'              	movwf	___flmul@b+3
  2520  0014' 3000               	movlw	0
  2521  0015' 0090'              	movwf	___flmul@b+2
  2522  0016' 3000               	movlw	0
  2523  0017' 008F'              	movwf	___flmul@b+1
  2524  0018' 3000               	movlw	0
  2525  0019' 008E'              	movwf	___flmul@b
  2526  001A'                    l1179:
  2527  001A' 1790'              	bsf	___flmul@b+2,7
  2528  001B' 2824'              	goto	l1183
  2529  001C'                    l1181:
  2530  001C' 3000               	movlw	0
  2531  001D' 0091'              	movwf	___flmul@b+3
  2532  001E' 3000               	movlw	0
  2533  001F' 0090'              	movwf	___flmul@b+2
  2534  0020' 3000               	movlw	0
  2535  0021' 008F'              	movwf	___flmul@b+1
  2536  0022' 3000               	movlw	0
  2537  0023' 008E'              	movwf	___flmul@b
  2538  0024'                    l1183:
  2539  0024' 0815'              	movf	___flmul@a+3,w
  2540  0025' 3980               	andlw	128
  2541  0026' 0096'              	movwf	??___flmul
  2542  0027' 0816'              	movf	??___flmul,w
  2543  0028' 069B'              	xorwf	___flmul@sign,f
  2544  0029' 3515'              	lslf	___flmul@a+3,w
  2545  002A' 0096'              	movwf	??___flmul
  2546  002B' 0816'              	movf	??___flmul,w
  2547  002C' 00A0'              	movwf	___flmul@aexp
  2548  002D' 1B94'              	btfsc	___flmul@a+2,7
  2549  002E' 1420'              	bsf	___flmul@aexp,0
  2550  002F' 0820'              	movf	___flmul@aexp,w
  2551  0030' 1903               	btfsc	3,2
  2552  0031' 283F'              	goto	l1199
  2553  0032' 0A20'              	incf	___flmul@aexp,w
  2554  0033' 1D03               	btfss	3,2
  2555  0034' 283D'              	goto	l1197
  2556  0035' 3000               	movlw	0
  2557  0036' 0095'              	movwf	___flmul@a+3
  2558  0037' 3000               	movlw	0
  2559  0038' 0094'              	movwf	___flmul@a+2
  2560  0039' 3000               	movlw	0
  2561  003A' 0093'              	movwf	___flmul@a+1
  2562  003B' 3000               	movlw	0
  2563  003C' 0092'              	movwf	___flmul@a
  2564  003D'                    l1197:
  2565  003D' 1794'              	bsf	___flmul@a+2,7
  2566  003E' 2847'              	goto	l1201
  2567  003F'                    l1199:
  2568  003F' 3000               	movlw	0
  2569  0040' 0095'              	movwf	___flmul@a+3
  2570  0041' 3000               	movlw	0
  2571  0042' 0094'              	movwf	___flmul@a+2
  2572  0043' 3000               	movlw	0
  2573  0044' 0093'              	movwf	___flmul@a+1
  2574  0045' 3000               	movlw	0
  2575  0046' 0092'              	movwf	___flmul@a
  2576  0047'                    l1201:
  2577  0047' 0820'              	movf	___flmul@aexp,w
  2578  0048' 1D03               	btfss	3,2
  2579  0049' 0821'              	movf	___flmul@bexp,w
  2580  004A' 1D03               	btfss	3,2
  2581  004B' 2855'              	goto	l1209
  2582  004C' 3000               	movlw	0
  2583  004D' 0091'              	movwf	?___flmul+3
  2584  004E' 3000               	movlw	0
  2585  004F' 0090'              	movwf	?___flmul+2
  2586  0050' 3000               	movlw	0
  2587  0051' 008F'              	movwf	?___flmul+1
  2588  0052' 3000               	movlw	0
  2589  0053' 008E'              	movwf	?___flmul
  2590  0054' 0008               	return
  2591  0055'                    l1209:
  2592  0055' 080E'              	movf	___flmul@b,w
  2593  0056' 0096'              	movwf	??___flmul
  2594  0057' 0816'              	movf	??___flmul,w
  2595  0058' 0082'              	movwf	__Umul8_16@multiplicand
  2596  0059' 0814'              	movf	___flmul@a+2,w
  2597  005A' 2000'              	fcall	__Umul8_16
  2598  005B' 0803'              	movf	?__Umul8_16+1,w
  2599  005C' 0020               	movlb	0	; select bank0
  2600  005D' 00A7'              	movwf	___flmul@temp+1
  2601  005E' 0802'              	movf	?__Umul8_16,w
  2602  005F' 00A6'              	movwf	___flmul@temp
  2603  0060' 0826'              	movf	___flmul@temp,w
  2604  0061' 0096'              	movwf	??___flmul
  2605  0062' 0197'              	clrf	??___flmul+1
  2606  0063' 0198'              	clrf	??___flmul+2
  2607  0064' 0199'              	clrf	??___flmul+3
  2608  0065' 0819'              	movf	??___flmul+3,w
  2609  0066' 009F'              	movwf	___flmul@grs+3
  2610  0067' 0818'              	movf	??___flmul+2,w
  2611  0068' 009E'              	movwf	___flmul@grs+2
  2612  0069' 0817'              	movf	??___flmul+1,w
  2613  006A' 009D'              	movwf	___flmul@grs+1
  2614  006B' 0816'              	movf	??___flmul,w
  2615  006C' 009C'              	movwf	___flmul@grs
  2616  006D' 0827'              	movf	___flmul@temp+1,w
  2617  006E' 0096'              	movwf	??___flmul
  2618  006F' 0197'              	clrf	??___flmul+1
  2619  0070' 0198'              	clrf	??___flmul+2
  2620  0071' 0199'              	clrf	??___flmul+3
  2621  0072' 0819'              	movf	??___flmul+3,w
  2622  0073' 00A5'              	movwf	___flmul@prod+3
  2623  0074' 0818'              	movf	??___flmul+2,w
  2624  0075' 00A4'              	movwf	___flmul@prod+2
  2625  0076' 0817'              	movf	??___flmul+1,w
  2626  0077' 00A3'              	movwf	___flmul@prod+1
  2627  0078' 0816'              	movf	??___flmul,w
  2628  0079' 00A2'              	movwf	___flmul@prod
  2629  007A' 080F'              	movf	___flmul@b+1,w
  2630  007B' 0096'              	movwf	??___flmul
  2631  007C' 0816'              	movf	??___flmul,w
  2632  007D' 0082'              	movwf	__Umul8_16@multiplicand
  2633  007E' 0813'              	movf	___flmul@a+1,w
  2634  007F' 2000'              	fcall	__Umul8_16
  2635  0080' 0803'              	movf	?__Umul8_16+1,w
  2636  0081' 0020               	movlb	0	; select bank0
  2637  0082' 00A7'              	movwf	___flmul@temp+1
  2638  0083' 0802'              	movf	?__Umul8_16,w
  2639  0084' 00A6'              	movwf	___flmul@temp
  2640  0085' 0826'              	movf	___flmul@temp,w
  2641  0086' 0096'              	movwf	??___flmul
  2642  0087' 0197'              	clrf	??___flmul+1
  2643  0088' 0198'              	clrf	??___flmul+2
  2644  0089' 0199'              	clrf	??___flmul+3
  2645  008A' 0816'              	movf	??___flmul,w
  2646  008B' 079C'              	addwf	___flmul@grs,f
  2647  008C' 0817'              	movf	??___flmul+1,w
  2648  008D' 3D9D'              	addwfc	___flmul@grs+1,f
  2649  008E' 0818'              	movf	??___flmul+2,w
  2650  008F' 3D9E'              	addwfc	___flmul@grs+2,f
  2651  0090' 0819'              	movf	??___flmul+3,w
  2652  0091' 3D9F'              	addwfc	___flmul@grs+3,f
  2653  0092' 0827'              	movf	___flmul@temp+1,w
  2654  0093' 0096'              	movwf	??___flmul
  2655  0094' 0197'              	clrf	??___flmul+1
  2656  0095' 0198'              	clrf	??___flmul+2
  2657  0096' 0199'              	clrf	??___flmul+3
  2658  0097' 0816'              	movf	??___flmul,w
  2659  0098' 07A2'              	addwf	___flmul@prod,f
  2660  0099' 0817'              	movf	??___flmul+1,w
  2661  009A' 3DA3'              	addwfc	___flmul@prod+1,f
  2662  009B' 0818'              	movf	??___flmul+2,w
  2663  009C' 3DA4'              	addwfc	___flmul@prod+2,f
  2664  009D' 0819'              	movf	??___flmul+3,w
  2665  009E' 3DA5'              	addwfc	___flmul@prod+3,f
  2666  009F' 0810'              	movf	___flmul@b+2,w
  2667  00A0' 0096'              	movwf	??___flmul
  2668  00A1' 0816'              	movf	??___flmul,w
  2669  00A2' 0082'              	movwf	__Umul8_16@multiplicand
  2670  00A3' 0812'              	movf	___flmul@a,w
  2671  00A4' 2000'              	fcall	__Umul8_16
  2672  00A5' 0803'              	movf	?__Umul8_16+1,w
  2673  00A6' 0020               	movlb	0	; select bank0
  2674  00A7' 00A7'              	movwf	___flmul@temp+1
  2675  00A8' 0802'              	movf	?__Umul8_16,w
  2676  00A9' 00A6'              	movwf	___flmul@temp
  2677  00AA' 0826'              	movf	___flmul@temp,w
  2678  00AB' 0096'              	movwf	??___flmul
  2679  00AC' 0197'              	clrf	??___flmul+1
  2680  00AD' 0198'              	clrf	??___flmul+2
  2681  00AE' 0199'              	clrf	??___flmul+3
  2682  00AF' 0816'              	movf	??___flmul,w
  2683  00B0' 079C'              	addwf	___flmul@grs,f
  2684  00B1' 0817'              	movf	??___flmul+1,w
  2685  00B2' 3D9D'              	addwfc	___flmul@grs+1,f
  2686  00B3' 0818'              	movf	??___flmul+2,w
  2687  00B4' 3D9E'              	addwfc	___flmul@grs+2,f
  2688  00B5' 0819'              	movf	??___flmul+3,w
  2689  00B6' 3D9F'              	addwfc	___flmul@grs+3,f
  2690  00B7' 0827'              	movf	___flmul@temp+1,w
  2691  00B8' 0096'              	movwf	??___flmul
  2692  00B9' 0197'              	clrf	??___flmul+1
  2693  00BA' 0198'              	clrf	??___flmul+2
  2694  00BB' 0199'              	clrf	??___flmul+3
  2695  00BC' 0816'              	movf	??___flmul,w
  2696  00BD' 07A2'              	addwf	___flmul@prod,f
  2697  00BE' 0817'              	movf	??___flmul+1,w
  2698  00BF' 3DA3'              	addwfc	___flmul@prod+1,f
  2699  00C0' 0818'              	movf	??___flmul+2,w
  2700  00C1' 3DA4'              	addwfc	___flmul@prod+2,f
  2701  00C2' 0819'              	movf	??___flmul+3,w
  2702  00C3' 3DA5'              	addwfc	___flmul@prod+3,f
  2703  00C4' 3008               	movlw	8
  2704  00C5'                    u1085:
  2705  00C5' 359C'              	lslf	___flmul@grs,f
  2706  00C6' 0D9D'              	rlf	___flmul@grs+1,f
  2707  00C7' 0D9E'              	rlf	___flmul@grs+2,f
  2708  00C8' 0D9F'              	rlf	___flmul@grs+3,f
  2709  00C9' 0B89               	decfsz	9,f
  2710  00CA' 28C5'              	goto	u1085
  2711  00CB' 080F'              	movf	___flmul@b+1,w
  2712  00CC' 0096'              	movwf	??___flmul
  2713  00CD' 0816'              	movf	??___flmul,w
  2714  00CE' 0082'              	movwf	__Umul8_16@multiplicand
  2715  00CF' 0812'              	movf	___flmul@a,w
  2716  00D0' 2000'              	fcall	__Umul8_16
  2717  00D1' 0803'              	movf	?__Umul8_16+1,w
  2718  00D2' 0020               	movlb	0	; select bank0
  2719  00D3' 00A7'              	movwf	___flmul@temp+1
  2720  00D4' 0802'              	movf	?__Umul8_16,w
  2721  00D5' 00A6'              	movwf	___flmul@temp
  2722  00D6' 0826'              	movf	___flmul@temp,w
  2723  00D7' 079C'              	addwf	___flmul@grs,f
  2724  00D8' 0827'              	movf	___flmul@temp+1,w
  2725  00D9' 3D9D'              	addwfc	___flmul@grs+1,f
  2726  00DA' 3000               	movlw	0
  2727  00DB' 3D9E'              	addwfc	___flmul@grs+2,f
  2728  00DC' 3D9F'              	addwfc	___flmul@grs+3,f
  2729  00DD' 080E'              	movf	___flmul@b,w
  2730  00DE' 0096'              	movwf	??___flmul
  2731  00DF' 0816'              	movf	??___flmul,w
  2732  00E0' 0082'              	movwf	__Umul8_16@multiplicand
  2733  00E1' 0813'              	movf	___flmul@a+1,w
  2734  00E2' 2000'              	fcall	__Umul8_16
  2735  00E3' 0803'              	movf	?__Umul8_16+1,w
  2736  00E4' 0020               	movlb	0	; select bank0
  2737  00E5' 00A7'              	movwf	___flmul@temp+1
  2738  00E6' 0802'              	movf	?__Umul8_16,w
  2739  00E7' 00A6'              	movwf	___flmul@temp
  2740  00E8' 0826'              	movf	___flmul@temp,w
  2741  00E9' 079C'              	addwf	___flmul@grs,f
  2742  00EA' 0827'              	movf	___flmul@temp+1,w
  2743  00EB' 3D9D'              	addwfc	___flmul@grs+1,f
  2744  00EC' 3000               	movlw	0
  2745  00ED' 3D9E'              	addwfc	___flmul@grs+2,f
  2746  00EE' 3D9F'              	addwfc	___flmul@grs+3,f
  2747  00EF' 3008               	movlw	8
  2748  00F0'                    u1095:
  2749  00F0' 359C'              	lslf	___flmul@grs,f
  2750  00F1' 0D9D'              	rlf	___flmul@grs+1,f
  2751  00F2' 0D9E'              	rlf	___flmul@grs+2,f
  2752  00F3' 0D9F'              	rlf	___flmul@grs+3,f
  2753  00F4' 0B89               	decfsz	9,f
  2754  00F5' 28F0'              	goto	u1095
  2755  00F6' 080E'              	movf	___flmul@b,w
  2756  00F7' 0096'              	movwf	??___flmul
  2757  00F8' 0816'              	movf	??___flmul,w
  2758  00F9' 0082'              	movwf	__Umul8_16@multiplicand
  2759  00FA' 0812'              	movf	___flmul@a,w
  2760  00FB' 2000'              	fcall	__Umul8_16
  2761  00FC' 0803'              	movf	?__Umul8_16+1,w
  2762  00FD' 0020               	movlb	0	; select bank0
  2763  00FE' 00A7'              	movwf	___flmul@temp+1
  2764  00FF' 0802'              	movf	?__Umul8_16,w
  2765  0100' 00A6'              	movwf	___flmul@temp
  2766  0101' 0826'              	movf	___flmul@temp,w
  2767  0102' 079C'              	addwf	___flmul@grs,f
  2768  0103' 0827'              	movf	___flmul@temp+1,w
  2769  0104' 3D9D'              	addwfc	___flmul@grs+1,f
  2770  0105' 3000               	movlw	0
  2771  0106' 3D9E'              	addwfc	___flmul@grs+2,f
  2772  0107' 3D9F'              	addwfc	___flmul@grs+3,f
  2773  0108' 080F'              	movf	___flmul@b+1,w
  2774  0109' 0096'              	movwf	??___flmul
  2775  010A' 0816'              	movf	??___flmul,w
  2776  010B' 0082'              	movwf	__Umul8_16@multiplicand
  2777  010C' 0814'              	movf	___flmul@a+2,w
  2778  010D' 2000'              	fcall	__Umul8_16
  2779  010E' 0803'              	movf	?__Umul8_16+1,w
  2780  010F' 0020               	movlb	0	; select bank0
  2781  0110' 00A7'              	movwf	___flmul@temp+1
  2782  0111' 0802'              	movf	?__Umul8_16,w
  2783  0112' 00A6'              	movwf	___flmul@temp
  2784  0113' 0826'              	movf	___flmul@temp,w
  2785  0114' 07A2'              	addwf	___flmul@prod,f
  2786  0115' 0827'              	movf	___flmul@temp+1,w
  2787  0116' 3DA3'              	addwfc	___flmul@prod+1,f
  2788  0117' 3000               	movlw	0
  2789  0118' 3DA4'              	addwfc	___flmul@prod+2,f
  2790  0119' 3DA5'              	addwfc	___flmul@prod+3,f
  2791  011A' 0810'              	movf	___flmul@b+2,w
  2792  011B' 0096'              	movwf	??___flmul
  2793  011C' 0816'              	movf	??___flmul,w
  2794  011D' 0082'              	movwf	__Umul8_16@multiplicand
  2795  011E' 0813'              	movf	___flmul@a+1,w
  2796  011F' 2000'              	fcall	__Umul8_16
  2797  0120' 0803'              	movf	?__Umul8_16+1,w
  2798  0121' 0020               	movlb	0	; select bank0
  2799  0122' 00A7'              	movwf	___flmul@temp+1
  2800  0123' 0802'              	movf	?__Umul8_16,w
  2801  0124' 00A6'              	movwf	___flmul@temp
  2802  0125' 0826'              	movf	___flmul@temp,w
  2803  0126' 07A2'              	addwf	___flmul@prod,f
  2804  0127' 0827'              	movf	___flmul@temp+1,w
  2805  0128' 3DA3'              	addwfc	___flmul@prod+1,f
  2806  0129' 3000               	movlw	0
  2807  012A' 3DA4'              	addwfc	___flmul@prod+2,f
  2808  012B' 3DA5'              	addwfc	___flmul@prod+3,f
  2809  012C' 0810'              	movf	___flmul@b+2,w
  2810  012D' 0096'              	movwf	??___flmul
  2811  012E' 0816'              	movf	??___flmul,w
  2812  012F' 0082'              	movwf	__Umul8_16@multiplicand
  2813  0130' 0814'              	movf	___flmul@a+2,w
  2814  0131' 2000'              	fcall	__Umul8_16
  2815  0132' 0803'              	movf	?__Umul8_16+1,w
  2816  0133' 0020               	movlb	0	; select bank0
  2817  0134' 00A7'              	movwf	___flmul@temp+1
  2818  0135' 0802'              	movf	?__Umul8_16,w
  2819  0136' 00A6'              	movwf	___flmul@temp
  2820  0137' 0826'              	movf	___flmul@temp,w
  2821  0138' 0096'              	movwf	??___flmul
  2822  0139' 0827'              	movf	___flmul@temp+1,w
  2823  013A' 0097'              	movwf	??___flmul+1
  2824  013B' 0198'              	clrf	??___flmul+2
  2825  013C' 0199'              	clrf	??___flmul+3
  2826  013D' 3008               	movlw	8
  2827  013E'                    u1105:
  2828  013E' 3596'              	lslf	??___flmul,f
  2829  013F' 0D97'              	rlf	??___flmul+1,f
  2830  0140' 0D98'              	rlf	??___flmul+2,f
  2831  0141' 0D99'              	rlf	??___flmul+3,f
  2832  0142' 0B89               	decfsz	9,f
  2833  0143' 293E'              	goto	u1105
  2834  0144' 0816'              	movf	??___flmul,w
  2835  0145' 07A2'              	addwf	___flmul@prod,f
  2836  0146' 0817'              	movf	??___flmul+1,w
  2837  0147' 3DA3'              	addwfc	___flmul@prod+1,f
  2838  0148' 0818'              	movf	??___flmul+2,w
  2839  0149' 3DA4'              	addwfc	___flmul@prod+2,f
  2840  014A' 0819'              	movf	??___flmul+3,w
  2841  014B' 3DA5'              	addwfc	___flmul@prod+3,f
  2842  014C' 081C'              	movf	___flmul@grs,w
  2843  014D' 0096'              	movwf	??___flmul
  2844  014E' 081D'              	movf	___flmul@grs+1,w
  2845  014F' 0097'              	movwf	??___flmul+1
  2846  0150' 081E'              	movf	___flmul@grs+2,w
  2847  0151' 0098'              	movwf	??___flmul+2
  2848  0152' 081F'              	movf	___flmul@grs+3,w
  2849  0153' 0099'              	movwf	??___flmul+3
  2850  0154' 3018               	movlw	24
  2851  0155'                    u1115:
  2852  0155' 3699'              	lsrf	??___flmul+3,f
  2853  0156' 0C98'              	rrf	??___flmul+2,f
  2854  0157' 0C97'              	rrf	??___flmul+1,f
  2855  0158' 0C96'              	rrf	??___flmul,f
  2856  0159' 0B89               	decfsz	9,f
  2857  015A' 2955'              	goto	u1115
  2858  015B' 0816'              	movf	??___flmul,w
  2859  015C' 07A2'              	addwf	___flmul@prod,f
  2860  015D' 0817'              	movf	??___flmul+1,w
  2861  015E' 3DA3'              	addwfc	___flmul@prod+1,f
  2862  015F' 0818'              	movf	??___flmul+2,w
  2863  0160' 3DA4'              	addwfc	___flmul@prod+2,f
  2864  0161' 0819'              	movf	??___flmul+3,w
  2865  0162' 3DA5'              	addwfc	___flmul@prod+3,f
  2866  0163' 3008               	movlw	8
  2867  0164'                    u1125:
  2868  0164' 359C'              	lslf	___flmul@grs,f
  2869  0165' 0D9D'              	rlf	___flmul@grs+1,f
  2870  0166' 0D9E'              	rlf	___flmul@grs+2,f
  2871  0167' 0D9F'              	rlf	___flmul@grs+3,f
  2872  0168' 0B89               	decfsz	9,f
  2873  0169' 2964'              	goto	u1125
  2874  016A' 0821'              	movf	___flmul@bexp,w
  2875  016B' 0720'              	addwf	___flmul@aexp,w
  2876  016C' 0096'              	movwf	??___flmul
  2877  016D' 0197'              	clrf	??___flmul+1
  2878  016E' 0D97'              	rlf	??___flmul+1,f
  2879  016F' 0816'              	movf	??___flmul,w
  2880  0170' 3E82               	addlw	130
  2881  0171' 00A6'              	movwf	___flmul@temp
  2882  0172' 30FF               	movlw	255
  2883  0173' 3D17'              	addwfc	??___flmul+1,w
  2884  0174' 00A7'              	movwf	___flmul@temp+1
  2885  0175'                    l1261:
  2886  0175' 1BA4'              	btfsc	___flmul@prod+2,7
  2887  0176' 298C'              	goto	l1263
  2888  0177' 3001               	movlw	1
  2889  0178'                    u1135:
  2890  0178' 35A2'              	lslf	___flmul@prod,f
  2891  0179' 0DA3'              	rlf	___flmul@prod+1,f
  2892  017A' 0DA4'              	rlf	___flmul@prod+2,f
  2893  017B' 0DA5'              	rlf	___flmul@prod+3,f
  2894  017C' 0B89               	decfsz	9,f
  2895  017D' 2978'              	goto	u1135
  2896  017E' 1B9F'              	btfsc	___flmul@grs+3,7
  2897  017F' 1422'              	bsf	___flmul@prod,0
  2898  0180' 3001               	movlw	1
  2899  0181'                    u1155:
  2900  0181' 359C'              	lslf	___flmul@grs,f
  2901  0182' 0D9D'              	rlf	___flmul@grs+1,f
  2902  0183' 0D9E'              	rlf	___flmul@grs+2,f
  2903  0184' 0D9F'              	rlf	___flmul@grs+3,f
  2904  0185' 0B89               	decfsz	9,f
  2905  0186' 2981'              	goto	u1155
  2906  0187' 30FF               	movlw	255
  2907  0188' 07A6'              	addwf	___flmul@temp,f
  2908  0189' 30FF               	movlw	255
  2909  018A' 3DA7'              	addwfc	___flmul@temp+1,f
  2910  018B' 2975'              	goto	l1261
  2911  018C'                    l1263:
  2912  018C' 01A0'              	clrf	___flmul@aexp
  2913  018D' 1F9F'              	btfss	___flmul@grs+3,7
  2914  018E' 29A5'              	goto	l1273
  2915  018F' 30FF               	movlw	255
  2916  0190' 051C'              	andwf	___flmul@grs,w
  2917  0191' 0096'              	movwf	??___flmul
  2918  0192' 30FF               	movlw	255
  2919  0193' 051D'              	andwf	___flmul@grs+1,w
  2920  0194' 0097'              	movwf	??___flmul+1
  2921  0195' 30FF               	movlw	255
  2922  0196' 051E'              	andwf	___flmul@grs+2,w
  2923  0197' 0098'              	movwf	??___flmul+2
  2924  0198' 307F               	movlw	127
  2925  0199' 051F'              	andwf	___flmul@grs+3,w
  2926  019A' 0099'              	movwf	??___flmul+3
  2927  019B' 0819'              	movf	??___flmul+3,w
  2928  019C' 0418'              	iorwf	??___flmul+2,w
  2929  019D' 0417'              	iorwf	??___flmul+1,w
  2930  019E' 0416'              	iorwf	??___flmul,w
  2931  019F' 1903               	skipnz
  2932  01A0' 1822'              	btfsc	___flmul@prod,0
  2933  01A1' 29A3'              	goto	l1269
  2934  01A2' 29A5'              	goto	l1273
  2935  01A3'                    l1269:
  2936  01A3' 01A0'              	clrf	___flmul@aexp
  2937  01A4' 0AA0'              	incf	___flmul@aexp,f
  2938  01A5'                    l1273:
  2939  01A5' 0820'              	movf	___flmul@aexp,w
  2940  01A6' 1903               	btfsc	3,2
  2941  01A7' 29CE'              	goto	l1283
  2942  01A8' 3001               	movlw	1
  2943  01A9' 07A2'              	addwf	___flmul@prod,f
  2944  01AA' 3000               	movlw	0
  2945  01AB' 3DA3'              	addwfc	___flmul@prod+1,f
  2946  01AC' 3000               	movlw	0
  2947  01AD' 3DA4'              	addwfc	___flmul@prod+2,f
  2948  01AE' 3000               	movlw	0
  2949  01AF' 3DA5'              	addwfc	___flmul@prod+3,f
  2950  01B0' 1C25'              	btfss	___flmul@prod+3,0
  2951  01B1' 29CE'              	goto	l1283
  2952  01B2' 0822'              	movf	___flmul@prod,w
  2953  01B3' 0096'              	movwf	??___flmul
  2954  01B4' 0823'              	movf	___flmul@prod+1,w
  2955  01B5' 0097'              	movwf	??___flmul+1
  2956  01B6' 0824'              	movf	___flmul@prod+2,w
  2957  01B7' 0098'              	movwf	??___flmul+2
  2958  01B8' 0825'              	movf	___flmul@prod+3,w
  2959  01B9' 0099'              	movwf	??___flmul+3
  2960  01BA' 3001               	movlw	1
  2961  01BB' 009A'              	movwf	??___flmul+4
  2962  01BC'                    u1225:
  2963  01BC' 3799'              	asrf	??___flmul+3,f
  2964  01BD' 0C98'              	rrf	??___flmul+2,f
  2965  01BE' 0C97'              	rrf	??___flmul+1,f
  2966  01BF' 0C96'              	rrf	??___flmul,f
  2967  01C0' 0B9A'              	decfsz	??___flmul+4,f
  2968  01C1' 29BC'              	goto	u1225
  2969  01C2' 0819'              	movf	??___flmul+3,w
  2970  01C3' 00A5'              	movwf	___flmul@prod+3
  2971  01C4' 0818'              	movf	??___flmul+2,w
  2972  01C5' 00A4'              	movwf	___flmul@prod+2
  2973  01C6' 0817'              	movf	??___flmul+1,w
  2974  01C7' 00A3'              	movwf	___flmul@prod+1
  2975  01C8' 0816'              	movf	??___flmul,w
  2976  01C9' 00A2'              	movwf	___flmul@prod
  2977  01CA' 3001               	movlw	1
  2978  01CB' 07A6'              	addwf	___flmul@temp,f
  2979  01CC' 3000               	movlw	0
  2980  01CD' 3DA7'              	addwfc	___flmul@temp+1,f
  2981  01CE'                    l1283:
  2982  01CE' 0827'              	movf	___flmul@temp+1,w
  2983  01CF' 3A80               	xorlw	128
  2984  01D0' 0096'              	movwf	??___flmul
  2985  01D1' 3080               	movlw	128
  2986  01D2' 0216'              	subwf	??___flmul,w
  2987  01D3' 1D03               	skipz
  2988  01D4' 29D7'              	goto	u1235
  2989  01D5' 30FF               	movlw	255
  2990  01D6' 0226'              	subwf	___flmul@temp,w
  2991  01D7'                    u1235:
  2992  01D7' 1C03               	skipc
  2993  01D8' 29E3'              	goto	l1287
  2994  01D9' 307F               	movlw	127
  2995  01DA' 0020               	movlb	0	; select bank0
  2996  01DB' 00A5'              	movwf	___flmul@prod+3
  2997  01DC' 3080               	movlw	128
  2998  01DD' 00A4'              	movwf	___flmul@prod+2
  2999  01DE' 3000               	movlw	0
  3000  01DF' 00A3'              	movwf	___flmul@prod+1
  3001  01E0' 3000               	movlw	0
  3002  01E1' 00A2'              	movwf	___flmul@prod
  3003  01E2' 2A0D'              	goto	l614
  3004  01E3'                    l1287:
  3005  01E3' 0020               	movlb	0	; select bank0
  3006  01E4' 0827'              	movf	___flmul@temp+1,w
  3007  01E5' 3A80               	xorlw	128
  3008  01E6' 0096'              	movwf	??___flmul
  3009  01E7' 3080               	movlw	128
  3010  01E8' 0216'              	subwf	??___flmul,w
  3011  01E9' 1D03               	skipz
  3012  01EA' 29ED'              	goto	u1245
  3013  01EB' 3001               	movlw	1
  3014  01EC' 0226'              	subwf	___flmul@temp,w
  3015  01ED'                    u1245:
  3016  01ED' 1803               	skipnc
  3017  01EE' 29FA'              	goto	l1293
  3018  01EF' 3000               	movlw	0
  3019  01F0' 0020               	movlb	0	; select bank0
  3020  01F1' 00A5'              	movwf	___flmul@prod+3
  3021  01F2' 3000               	movlw	0
  3022  01F3' 00A4'              	movwf	___flmul@prod+2
  3023  01F4' 3000               	movlw	0
  3024  01F5' 00A3'              	movwf	___flmul@prod+1
  3025  01F6' 3000               	movlw	0
  3026  01F7' 00A2'              	movwf	___flmul@prod
  3027  01F8' 019B'              	clrf	___flmul@sign
  3028  01F9' 2A0D'              	goto	l614
  3029  01FA'                    l1293:
  3030  01FA' 0020               	movlb	0	; select bank0
  3031  01FB' 0826'              	movf	___flmul@temp,w
  3032  01FC' 0096'              	movwf	??___flmul
  3033  01FD' 0816'              	movf	??___flmul,w
  3034  01FE' 00A1'              	movwf	___flmul@bexp
  3035  01FF' 30FF               	movlw	255
  3036  0200' 05A2'              	andwf	___flmul@prod,f
  3037  0201' 30FF               	movlw	255
  3038  0202' 05A3'              	andwf	___flmul@prod+1,f
  3039  0203' 307F               	movlw	127
  3040  0204' 05A4'              	andwf	___flmul@prod+2,f
  3041  0205' 3000               	movlw	0
  3042  0206' 05A5'              	andwf	___flmul@prod+3,f
  3043  0207' 1821'              	btfsc	___flmul@bexp,0
  3044  0208' 17A4'              	bsf	___flmul@prod+2,7
  3045  0209' 3621'              	lsrf	___flmul@bexp,w
  3046  020A' 0096'              	movwf	??___flmul
  3047  020B' 0816'              	movf	??___flmul,w
  3048  020C' 00A5'              	movwf	___flmul@prod+3
  3049  020D'                    l614:
  3050  020D' 081B'              	movf	___flmul@sign,w
  3051  020E' 0096'              	movwf	??___flmul
  3052  020F' 0816'              	movf	??___flmul,w
  3053  0210' 04A5'              	iorwf	___flmul@prod+3,f
  3054  0211' 0825'              	movf	___flmul@prod+3,w
  3055  0212' 0091'              	movwf	?___flmul+3
  3056  0213' 0824'              	movf	___flmul@prod+2,w
  3057  0214' 0090'              	movwf	?___flmul+2
  3058  0215' 0823'              	movf	___flmul@prod+1,w
  3059  0216' 008F'              	movwf	?___flmul+1
  3060  0217' 0822'              	movf	___flmul@prod,w
  3061  0218' 008E'              	movwf	?___flmul
  3062  0219' 0008               	return
  3063  021A'                    __end_of___flmul:
  3064                           
  3065                           	psect	text8
  3066  0000'                    __ptext8:	
  3067 ;; *************** function __Umul8_16 *****************
  3068 ;; Defined at:
  3069 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  multiplier      1    wreg     unsigned char 
  3072 ;;  multiplicand    1    2[COMMON] unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  multiplier      1   10[COMMON] unsigned char 
  3075 ;;  word_mpld       2    8[COMMON] unsigned int 
  3076 ;;  product         2    6[COMMON] unsigned int 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  2    2[COMMON] unsigned int 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1
  3086 ;;      Params:         2       0       0
  3087 ;;      Locals:         5       0       0
  3088 ;;      Temps:          2       0       0
  3089 ;;      Totals:         9       0       0
  3090 ;;Total ram usage:        9 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		___flmul
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100  0000'                    __Umul8_16:	
  3101                           ;psect for function __Umul8_16
  3102                           
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3106                           ;__Umul8_16@multiplier stored from wreg
  3107  0000' 008A'              	movwf	__Umul8_16@multiplier
  3108  0001' 0186'              	clrf	__Umul8_16@product
  3109  0002' 0187'              	clrf	__Umul8_16@product+1
  3110  0003' 0802'              	movf	__Umul8_16@multiplicand,w
  3111  0004' 0084'              	movwf	??__Umul8_16
  3112  0005' 0185'              	clrf	??__Umul8_16+1
  3113  0006' 0804'              	movf	??__Umul8_16,w
  3114  0007' 0088'              	movwf	__Umul8_16@word_mpld
  3115  0008' 0805'              	movf	??__Umul8_16+1,w
  3116  0009' 0089'              	movwf	__Umul8_16@word_mpld+1
  3117  000A'                    l1021:
  3118  000A' 1C0A'              	btfss	__Umul8_16@multiplier,0
  3119  000B' 2810'              	goto	l621
  3120  000C' 0808'              	movf	__Umul8_16@word_mpld,w
  3121  000D' 0786'              	addwf	__Umul8_16@product,f
  3122  000E' 0809'              	movf	__Umul8_16@word_mpld+1,w
  3123  000F' 3D87'              	addwfc	__Umul8_16@product+1,f
  3124  0010'                    l621:
  3125  0010' 3001               	movlw	1
  3126  0011'                    u735:
  3127  0011' 3588'              	lslf	__Umul8_16@word_mpld,f
  3128  0012' 0D89'              	rlf	__Umul8_16@word_mpld+1,f
  3129  0013' 0B89               	decfsz	9,f
  3130  0014' 2811'              	goto	u735
  3131  0015' 1003               	clrc
  3132  0016' 0C8A'              	rrf	__Umul8_16@multiplier,f
  3133  0017' 080A'              	movf	__Umul8_16@multiplier,w
  3134  0018' 1D03               	btfss	3,2
  3135  0019' 280A'              	goto	l1021
  3136  001A' 0807'              	movf	__Umul8_16@product+1,w
  3137  001B' 0083'              	movwf	?__Umul8_16+1
  3138  001C' 0806'              	movf	__Umul8_16@product,w
  3139  001D' 0082'              	movwf	?__Umul8_16
  3140  001E' 0008               	return
  3141  001F'                    __end_of__Umul8_16:
  3142                           
  3143                           	psect	text9
  3144  0000'                    __ptext9:	
  3145 ;; *************** function ___awdiv *****************
  3146 ;; Defined at:
  3147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  divisor         2    2[COMMON] int 
  3150 ;;  dividend        2    4[COMMON] int 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  quotient        2    9[COMMON] int 
  3153 ;;  sign            1    8[COMMON] unsigned char 
  3154 ;;  counter         1    7[COMMON] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  2    2[COMMON] int 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1
  3164 ;;      Params:         4       0       0
  3165 ;;      Locals:         4       0       0
  3166 ;;      Temps:          1       0       0
  3167 ;;      Totals:         9       0       0
  3168 ;;Total ram usage:        9 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 1
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178  0000'                    ___awdiv:	
  3179                           ;psect for function ___awdiv
  3180                           
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3184  0000' 0188'              	clrf	___awdiv@sign
  3185  0001' 1F83'              	btfss	___awdiv@divisor+1,7
  3186  0002' 280A'              	goto	l1093
  3187  0003' 0982'              	comf	___awdiv@divisor,f
  3188  0004' 0983'              	comf	___awdiv@divisor+1,f
  3189  0005' 0A82'              	incf	___awdiv@divisor,f
  3190  0006' 1903               	skipnz
  3191  0007' 0A83'              	incf	___awdiv@divisor+1,f
  3192  0008' 0188'              	clrf	___awdiv@sign
  3193  0009' 0A88'              	incf	___awdiv@sign,f
  3194  000A'                    l1093:
  3195  000A' 1F85'              	btfss	___awdiv@dividend+1,7
  3196  000B' 2815'              	goto	l1099
  3197  000C' 0984'              	comf	___awdiv@dividend,f
  3198  000D' 0985'              	comf	___awdiv@dividend+1,f
  3199  000E' 0A84'              	incf	___awdiv@dividend,f
  3200  000F' 1903               	skipnz
  3201  0010' 0A85'              	incf	___awdiv@dividend+1,f
  3202  0011' 3001               	movlw	1
  3203  0012' 0086'              	movwf	??___awdiv
  3204  0013' 0806'              	movf	??___awdiv,w
  3205  0014' 0688'              	xorwf	___awdiv@sign,f
  3206  0015'                    l1099:
  3207  0015' 0189'              	clrf	___awdiv@quotient
  3208  0016' 018A'              	clrf	___awdiv@quotient+1
  3209  0017' 0802'              	movf	___awdiv@divisor,w
  3210  0018' 0403'              	iorwf	___awdiv@divisor+1,w
  3211  0019' 1903               	btfsc	3,2
  3212  001A' 2844'              	goto	l1121
  3213  001B' 0187'              	clrf	___awdiv@counter
  3214  001C' 0A87'              	incf	___awdiv@counter,f
  3215  001D'                    l1109:
  3216  001D' 1B83'              	btfsc	___awdiv@divisor+1,7
  3217  001E' 2829'              	goto	l1111
  3218  001F' 3001               	movlw	1
  3219  0020'                    u835:
  3220  0020' 3582'              	lslf	___awdiv@divisor,f
  3221  0021' 0D83'              	rlf	___awdiv@divisor+1,f
  3222  0022' 0B89               	decfsz	9,f
  3223  0023' 2820'              	goto	u835
  3224  0024' 3001               	movlw	1
  3225  0025' 0086'              	movwf	??___awdiv
  3226  0026' 0806'              	movf	??___awdiv,w
  3227  0027' 0787'              	addwf	___awdiv@counter,f
  3228  0028' 281D'              	goto	l1109
  3229  0029'                    l1111:
  3230  0029' 3001               	movlw	1
  3231  002A'                    u855:
  3232  002A' 3589'              	lslf	___awdiv@quotient,f
  3233  002B' 0D8A'              	rlf	___awdiv@quotient+1,f
  3234  002C' 0B89               	decfsz	9,f
  3235  002D' 282A'              	goto	u855
  3236  002E' 0803'              	movf	___awdiv@divisor+1,w
  3237  002F' 0205'              	subwf	___awdiv@dividend+1,w
  3238  0030' 1D03               	skipz
  3239  0031' 2834'              	goto	u865
  3240  0032' 0802'              	movf	___awdiv@divisor,w
  3241  0033' 0204'              	subwf	___awdiv@dividend,w
  3242  0034'                    u865:
  3243  0034' 1C03               	skipc
  3244  0035' 283B'              	goto	l1117
  3245  0036' 0802'              	movf	___awdiv@divisor,w
  3246  0037' 0284'              	subwf	___awdiv@dividend,f
  3247  0038' 0803'              	movf	___awdiv@divisor+1,w
  3248  0039' 3B85'              	subwfb	___awdiv@dividend+1,f
  3249  003A' 1409'              	bsf	___awdiv@quotient,0
  3250  003B'                    l1117:
  3251  003B' 3001               	movlw	1
  3252  003C'                    u875:
  3253  003C' 3683'              	lsrf	___awdiv@divisor+1,f
  3254  003D' 0C82'              	rrf	___awdiv@divisor,f
  3255  003E' 0B89               	decfsz	9,f
  3256  003F' 283C'              	goto	u875
  3257  0040' 3001               	movlw	1
  3258  0041' 0287'              	subwf	___awdiv@counter,f
  3259  0042' 1D03               	btfss	3,2
  3260  0043' 2829'              	goto	l1111
  3261  0044'                    l1121:
  3262  0044' 0808'              	movf	___awdiv@sign,w
  3263  0045' 1903               	btfsc	3,2
  3264  0046' 284C'              	goto	l1125
  3265  0047' 0989'              	comf	___awdiv@quotient,f
  3266  0048' 098A'              	comf	___awdiv@quotient+1,f
  3267  0049' 0A89'              	incf	___awdiv@quotient,f
  3268  004A' 1903               	skipnz
  3269  004B' 0A8A'              	incf	___awdiv@quotient+1,f
  3270  004C'                    l1125:
  3271  004C' 080A'              	movf	___awdiv@quotient+1,w
  3272  004D' 0083'              	movwf	?___awdiv+1
  3273  004E' 0809'              	movf	___awdiv@quotient,w
  3274  004F' 0082'              	movwf	?___awdiv
  3275  0050' 0008               	return
  3276  0051'                    __end_of___awdiv:
  3277                           
  3278                           	psect	text10
  3279  0000'                    __ptext10:	
  3280 ;; *************** function _PWM_dc_set_yellow *****************
  3281 ;; Defined at:
  3282 ;;		line 8 in file "PWM_dc_set_yellow.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  duty_cycle      2    2[COMMON] int 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1
  3296 ;;      Params:         2       0       0
  3297 ;;      Locals:         0       0       0
  3298 ;;      Temps:          1       0       0
  3299 ;;      Totals:         3       0       0
  3300 ;;Total ram usage:        3 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310  0000'                    _PWM_dc_set_yellow:	
  3311                           ;psect for function _PWM_dc_set_yellow
  3312                           
  3313                           
  3314                           ;PWM_dc_set_yellow.c: 11:     if(duty_cycle < 10){
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _PWM_dc_set_yellow: [wreg]
  3318  0000' 0803'              	movf	PWM_dc_set_yellow@duty_cycle+1,w
  3319  0001' 3A80               	xorlw	128
  3320  0002' 0084'              	movwf	??_PWM_dc_set_yellow
  3321  0003' 3080               	movlw	128
  3322  0004' 0204'              	subwf	??_PWM_dc_set_yellow,w
  3323  0005' 1D03               	skipz
  3324  0006' 2809'              	goto	u785
  3325  0007' 300A               	movlw	10
  3326  0008' 0202'              	subwf	PWM_dc_set_yellow@duty_cycle,w
  3327  0009'                    u785:
  3328  0009' 1803               	skipnc
  3329  000A' 2810'              	goto	l1077
  3330                           
  3331                           ;PWM_dc_set_yellow.c: 12:         PWM2CONbits.PWM2EN = 0;
  3332  000B' 003B               	movlb	27	; select bank27
  3333  000C' 13AB               	bcf	43,7	;volatile
  3334                           
  3335                           ;PWM_dc_set_yellow.c: 13:         LATAbits.LATA4 = 0;
  3336  000D' 0022               	movlb	2	; select bank2
  3337  000E' 120C               	bcf	12,4	;volatile
  3338                           
  3339                           ;PWM_dc_set_yellow.c: 14:     }
  3340  000F' 2822'              	goto	l1081
  3341  0010'                    l1077:
  3342  0010' 0803'              	movf	PWM_dc_set_yellow@duty_cycle+1,w
  3343  0011' 3A80               	xorlw	128
  3344  0012' 0084'              	movwf	??_PWM_dc_set_yellow
  3345  0013' 3083               	movlw	131
  3346  0014' 0204'              	subwf	??_PWM_dc_set_yellow,w
  3347  0015' 1D03               	skipz
  3348  0016' 2819'              	goto	u795
  3349  0017' 30F6               	movlw	246
  3350  0018' 0202'              	subwf	PWM_dc_set_yellow@duty_cycle,w
  3351  0019'                    u795:
  3352  0019' 1C03               	skipc
  3353  001A' 2820'              	goto	l135
  3354                           
  3355                           ;PWM_dc_set_yellow.c: 16:         PWM2CONbits.PWM2EN = 0;
  3356  001B' 003B               	movlb	27	; select bank27
  3357  001C' 13AB               	bcf	43,7	;volatile
  3358                           
  3359                           ;PWM_dc_set_yellow.c: 17:         LATAbits.LATA4 = 1;
  3360  001D' 0022               	movlb	2	; select bank2
  3361  001E' 160C               	bsf	12,4	;volatile
  3362                           
  3363                           ;PWM_dc_set_yellow.c: 18:     }
  3364  001F' 2822'              	goto	l1081
  3365  0020'                    l135:	
  3366                           ;PWM_dc_set_yellow.c: 19:     else{
  3367                           
  3368                           
  3369                           ;PWM_dc_set_yellow.c: 20:         PWM2CONbits.PWM2EN = 1;
  3370  0020' 003B               	movlb	27	; select bank27
  3371  0021' 17AB               	bsf	43,7	;volatile
  3372  0022'                    l1081:
  3373                           
  3374                           ;PWM_dc_set_yellow.c: 24:     PWM2DC = (unsigned short)duty_cycle;
  3375  0022' 0803'              	movf	PWM_dc_set_yellow@duty_cycle+1,w
  3376  0023' 003B               	movlb	27	; select bank27
  3377  0024' 00A4               	movwf	36	;volatile
  3378  0025' 0802'              	movf	PWM_dc_set_yellow@duty_cycle,w
  3379  0026' 00A3               	movwf	35	;volatile
  3380                           
  3381                           ;PWM_dc_set_yellow.c: 27:     PWM2LDCONbits.LDA = 1;
  3382  0027' 17AF               	bsf	47,7	;volatile
  3383  0028' 0008               	return
  3384  0029'                    __end_of_PWM_dc_set_yellow:
  3385                           
  3386                           	psect	text11
  3387  0000'                    __ptext11:	
  3388 ;; *************** function _PWM_dc_set_white *****************
  3389 ;; Defined at:
  3390 ;;		line 8 in file "PWM_dc_set_white.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  duty_cycle      2    2[COMMON] int 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1
  3404 ;;      Params:         2       0       0
  3405 ;;      Locals:         0       0       0
  3406 ;;      Temps:          1       0       0
  3407 ;;      Totals:         3       0       0
  3408 ;;Total ram usage:        3 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418  0000'                    _PWM_dc_set_white:	
  3419                           ;psect for function _PWM_dc_set_white
  3420                           
  3421                           
  3422                           ;PWM_dc_set_white.c: 11:     if(duty_cycle < 10){
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _PWM_dc_set_white: [wreg]
  3426  0000' 0803'              	movf	PWM_dc_set_white@duty_cycle+1,w
  3427  0001' 3A80               	xorlw	128
  3428  0002' 0084'              	movwf	??_PWM_dc_set_white
  3429  0003' 3080               	movlw	128
  3430  0004' 0204'              	subwf	??_PWM_dc_set_white,w
  3431  0005' 1D03               	skipz
  3432  0006' 2809'              	goto	u765
  3433  0007' 300A               	movlw	10
  3434  0008' 0202'              	subwf	PWM_dc_set_white@duty_cycle,w
  3435  0009'                    u765:
  3436  0009' 1803               	skipnc
  3437  000A' 2810'              	goto	l1065
  3438                           
  3439                           ;PWM_dc_set_white.c: 12:         PWM1CONbits.PWM1EN = 0;
  3440  000B' 003B               	movlb	27	; select bank27
  3441  000C' 139B               	bcf	27,7	;volatile
  3442                           
  3443                           ;PWM_dc_set_white.c: 13:         LATAbits.LATA5 = 0;
  3444  000D' 0022               	movlb	2	; select bank2
  3445  000E' 128C               	bcf	12,5	;volatile
  3446                           
  3447                           ;PWM_dc_set_white.c: 14:     }
  3448  000F' 2822'              	goto	l1069
  3449  0010'                    l1065:
  3450  0010' 0803'              	movf	PWM_dc_set_white@duty_cycle+1,w
  3451  0011' 3A80               	xorlw	128
  3452  0012' 0084'              	movwf	??_PWM_dc_set_white
  3453  0013' 3083               	movlw	131
  3454  0014' 0204'              	subwf	??_PWM_dc_set_white,w
  3455  0015' 1D03               	skipz
  3456  0016' 2819'              	goto	u775
  3457  0017' 30F6               	movlw	246
  3458  0018' 0202'              	subwf	PWM_dc_set_white@duty_cycle,w
  3459  0019'                    u775:
  3460  0019' 1C03               	skipc
  3461  001A' 2820'              	goto	l120
  3462                           
  3463                           ;PWM_dc_set_white.c: 16:         PWM1CONbits.PWM1EN = 0;
  3464  001B' 003B               	movlb	27	; select bank27
  3465  001C' 139B               	bcf	27,7	;volatile
  3466                           
  3467                           ;PWM_dc_set_white.c: 17:         LATAbits.LATA5 = 1;
  3468  001D' 0022               	movlb	2	; select bank2
  3469  001E' 168C               	bsf	12,5	;volatile
  3470                           
  3471                           ;PWM_dc_set_white.c: 18:     }
  3472  001F' 2822'              	goto	l1069
  3473  0020'                    l120:	
  3474                           ;PWM_dc_set_white.c: 19:     else{
  3475                           
  3476                           
  3477                           ;PWM_dc_set_white.c: 20:         PWM1CONbits.PWM1EN = 1;
  3478  0020' 003B               	movlb	27	; select bank27
  3479  0021' 179B               	bsf	27,7	;volatile
  3480  0022'                    l1069:
  3481                           
  3482                           ;PWM_dc_set_white.c: 24:     PWM1DC = (unsigned short)duty_cycle;
  3483  0022' 0803'              	movf	PWM_dc_set_white@duty_cycle+1,w
  3484  0023' 003B               	movlb	27	; select bank27
  3485  0024' 0094               	movwf	20	;volatile
  3486  0025' 0802'              	movf	PWM_dc_set_white@duty_cycle,w
  3487  0026' 0093               	movwf	19	;volatile
  3488                           
  3489                           ;PWM_dc_set_white.c: 27:     PWM1LDCONbits.LDA = 1;
  3490  0027' 179F               	bsf	31,7	;volatile
  3491  0028' 0008               	return
  3492  0029'                    __end_of_PWM_dc_set_white:
  3493                           
  3494                           	psect	text12
  3495  0000'                    __ptext12:	
  3496 ;; *************** function _ADC_read *****************
  3497 ;; Defined at:
  3498 ;;		line 9 in file "ADC_read.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  channel         1    wreg     unsigned char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  channel         1    7[COMMON] unsigned char 
  3503 ;;  result          2    5[COMMON] int 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  2    2[COMMON] int 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1
  3513 ;;      Params:         2       0       0
  3514 ;;      Locals:         3       0       0
  3515 ;;      Temps:          1       0       0
  3516 ;;      Totals:         6       0       0
  3517 ;;Total ram usage:        6 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527  0000'                    _ADC_read:	
  3528                           ;psect for function _ADC_read
  3529                           
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  3533                           ;ADC_read@channel stored from wreg
  3534  0000' 0087'              	movwf	ADC_read@channel
  3535                           
  3536                           ;ADC_read.c: 11:     ADCON0bits.CHS = channel;
  3537  0001' 0807'              	movf	ADC_read@channel,w
  3538  0002' 0084'              	movwf	??_ADC_read
  3539  0003' 0D84'              	rlf	??_ADC_read,f
  3540  0004' 0D84'              	rlf	??_ADC_read,f
  3541  0005' 0021               	movlb	1	; select bank1
  3542  0006' 081D               	movf	29,w	;volatile
  3543  0007' 0604'              	xorwf	??_ADC_read,w
  3544  0008' 3983               	andlw	-125
  3545  0009' 0604'              	xorwf	??_ADC_read,w
  3546  000A' 009D               	movwf	29	;volatile
  3547                           
  3548                           ;ADC_read.c: 14:     _delay((unsigned long)((1)*(32000000/4000.0)));
  3549  000B' 300B               	movlw	11
  3550  000C' 0084'              	movwf	??_ADC_read
  3551  000D' 3062               	movlw	98
  3552  000E'                    u1447:
  3553  000E' 0B89               	decfsz	9,f
  3554  000F' 280E'              	goto	u1447
  3555  0010' 0B84'              	decfsz	??_ADC_read,f
  3556  0011' 280E'              	goto	u1447
  3557  0012' 3200               	nop2
  3558                           
  3559                           ;ADC_read.c: 17:     ADCON0bits.GO_nDONE = 1;
  3560  0013' 0021               	movlb	1	; select bank1
  3561  0014' 149D               	bsf	29,1	;volatile
  3562  0015'                    l56:	
  3563                           ;ADC_read.c: 20:     while(ADCON0bits.GO_nDONE == 1);
  3564                           
  3565  0015' 189D               	btfsc	29,1	;volatile
  3566  0016' 2815'              	goto	l56
  3567                           
  3568                           ;ADC_read.c: 23:     int result = (ADRESH<<8) + ADRESL;
  3569  0017' 081C               	movf	28,w	;volatile
  3570  0018' 0086'              	movwf	ADC_read@result+1
  3571  0019' 081B               	movf	27,w	;volatile
  3572  001A' 0085'              	movwf	ADC_read@result
  3573                           
  3574                           ;ADC_read.c: 26:     return result;
  3575  001B' 0806'              	movf	ADC_read@result+1,w
  3576  001C' 0083'              	movwf	?_ADC_read+1
  3577  001D' 0805'              	movf	ADC_read@result,w
  3578  001E' 0082'              	movwf	?_ADC_read
  3579  001F' 0008               	return
  3580  0020'                    __end_of_ADC_read:
  3581                           
  3582                           	psect	intentry
  3583  0000'                    __pintentry:	
  3584 ;; *************** function _ISR *****************
  3585 ;; Defined at:
  3586 ;;		line 54 in file "main.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1
  3600 ;;      Params:         0       0       0
  3601 ;;      Locals:         0       0       0
  3602 ;;      Temps:          2       0       0
  3603 ;;      Totals:         2       0       0
  3604 ;;Total ram usage:        2 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		Interrupt level 1
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613  0000'                    _ISR:
  3614                           
  3615                           ;incstack = 0
  3616  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3617                           
  3618                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3619  0001' 3180'              	pagesel	$
  3620                           
  3621                           ;main.c: 57:     lightsEnableFlag = !(lightsEnableFlag);
  3622  0002' 0020               	movlb	0	; select bank0
  3623  0003' 0808'              	movf	_lightsEnableFlag,w	;volatile
  3624  0004' 1D03               	btfss	3,2
  3625  0005' 2808'              	goto	u141_20
  3626  0006' 3001               	movlw	1
  3627  0007' 2809'              	goto	u142_20
  3628  0008'                    u141_20:
  3629  0008' 3000               	movlw	0
  3630  0009'                    u142_20:
  3631  0009' 0080'              	movwf	??_ISR
  3632  000A' 0800'              	movf	??_ISR,w
  3633  000B' 0088'              	movwf	_lightsEnableFlag	;volatile
  3634                           
  3635                           ;main.c: 60:     _delay((unsigned long)((200)*(32000000/4000.0)));
  3636  000C' 3009               	movlw	9
  3637  000D' 0081'              	movwf	??_ISR+1
  3638  000E' 301E               	movlw	30
  3639  000F' 0080'              	movwf	??_ISR
  3640  0010' 30E4               	movlw	228
  3641  0011'                    u145_27:
  3642  0011' 0B89               	decfsz	9,f
  3643  0012' 2811'              	goto	u145_27
  3644  0013' 0B80'              	decfsz	??_ISR,f
  3645  0014' 2811'              	goto	u145_27
  3646  0015' 0B81'              	decfsz	??_ISR+1,f
  3647  0016' 2811'              	goto	u145_27
  3648  0017' 3200               	nop2
  3649                           
  3650                           ;main.c: 61:     INTCONbits.INTF = 0;
  3651  0018' 108B               	bcf	11,1	;volatile
  3652  0019' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3653  001A' 0009               	retfie
  3654  001B'                    __end_of_ISR:
  3655  007E                     btemp	set	126	;btemp
  3656  007E                     int$flags	set	126
  3657  007E                     wtemp0	set	126
  3658                           
  3659                           	psect	idloc
  3660                           
  3661                           ;Config register IDLOC0 @ 0x8000
  3662                           ;	unspecified, using default values
  3663  8000                     	org	32768
  3664  8000  3FFF               	dw	16383
  3665                           
  3666                           ;Config register IDLOC1 @ 0x8001
  3667                           ;	unspecified, using default values
  3668  8001                     	org	32769
  3669  8001  3FFF               	dw	16383
  3670                           
  3671                           ;Config register IDLOC2 @ 0x8002
  3672                           ;	unspecified, using default values
  3673  8002                     	org	32770
  3674  8002  3FFF               	dw	16383
  3675                           
  3676                           ;Config register IDLOC3 @ 0x8003
  3677                           ;	unspecified, using default values
  3678  8003                     	org	32771
  3679  8003  3FFF               	dw	16383
  3680                           
  3681                           	psect	config
  3682                           
  3683                           ;Config register CONFIG1 @ 0x8007
  3684                           ;	
  3685                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  3686                           ;	Watchdog Timer Enable
  3687                           ;	WDTE = OFF, WDT disabled
  3688                           ;	Power-up Timer Enable
  3689                           ;	PWRTE = ON, PWRT enabled
  3690                           ;	MCLR Pin Function Select
  3691                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3692                           ;	Flash Program Memory Code Protection
  3693                           ;	CP = OFF, Program memory code protection is disabled
  3694                           ;	Brown-out Reset Enable
  3695                           ;	BOREN = OFF, Brown-out Reset disabled
  3696                           ;	Clock Out Enable
  3697                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3698  8007                     	org	32775
  3699  8007  3984               	dw	14724
  3700                           
  3701                           ;Config register CONFIG2 @ 0x8008
  3702                           ;	Flash Memory Self-Write Protection
  3703                           ;	WRT = OFF, Write protection off
  3704                           ;	PLL Enable
  3705                           ;	PLLEN = ON, 4x PLL enabled
  3706                           ;	Stack Overflow/Underflow Reset Enable
  3707                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3708                           ;	Brown-out Reset Voltage Selection
  3709                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3710                           ;	Low Power Brown-out Reset enable bit
  3711                           ;	LPBOREN = OFF, LPBOR is disabled
  3712                           ;	Low-Voltage Programming Enable
  3713                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3714  8008                     	org	32776
  3715  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         9
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     53      66
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    ___xxtofl->___awdiv
    ___flmul->__Umul8_16

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4129
                                             51 BANK0      2     2      0
                           _ADC_read
                   _PWM_dc_set_white
                  _PWM_dc_set_yellow
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _init
                           _init_adc
                    _init_interrtupt
                           _init_pwm
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrtupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _PWM_dc_set_yellow                                    3     1      2     218
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _PWM_dc_set_white                                     3     1      2     218
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             6     4      2      45
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
   _PWM_dc_set_white
   _PWM_dc_set_yellow
   ___awdiv
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
       ___awdiv (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _init
   _init_adc
   _init_interrtupt
   _init_pwm

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     35      42       6       82.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      4D       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 05 18:03:10 2022

  __end_of_PWM_dc_set_yellow 0029                           l56 0015                 ___awdiv@sign 0008  
                _white_ratio 0000          __Umul8_16@word_mpld 0008                          l120 0020  
                        l135 0020                          l406 004A                          l621 0010  
                        l614 020D                          l660 0072                          l652 0054  
                        l646 001E                          l659 0068            ??_init_interrtupt 0002  
                        _ISR 0000                          u735 0011                          u835 0020  
                        u915 001C                          u765 0009                          u775 0019  
                        u855 002A                          u785 0009                          u865 0034  
                        u945 0039                          u795 0019                          u875 003C  
                        u975 004E                          wreg 0009                 ___flmul@aexp 0020  
               ___flmul@bexp 0021                 ___flmul@sign 001B                 ___flmul@temp 0026  
               ___flmul@prod 0022                         ?_ISR 0000                 ___fltol@exp1 0032  
                       l1021 000A                         l1111 0029                         l1121 0044  
                       l1201 0047                         l1131 000A                         l1125 004C  
                       l1117 003B                         l1109 001D                         l1151 0038  
                       l1135 0013                         l1311 0016                         l1065 0010  
                       l1081 0022                         l1209 0055                         l1161 0057  
                       l1153 0046                         l1321 0031                         l1331 0066  
                       l1323 0041                         l1069 0022                         l1077 0010  
                       l1093 000A                         l1261 0175                         l1181 001C  
                       l1333 0059                         l1317 002D                         l1263 018C  
                       l1183 0024                         l1351 0004                         l1273 01A5  
                       l1345 008D                         l1361 0071                         l1099 0015  
                       l1283 01CE                         l1179 001A                         l1293 01FA  
                       l1269 01A3                         l1197 003D                         l1287 01E3  
                       l1199 003F                         u1105 013E                         u1115 0155  
                       u1125 0164                         u1135 0178                         u1225 01BC  
                       u1235 01D7                         u1155 0181                         u1315 004E  
                       u1245 01ED                         u1085 00C5                         u1095 00F0  
                       u1335 0060                         u1437 007F                         u1447 000E  
                       u1375 007A                         u1295 003A                         _main 0000  
                       _init 0000                         btemp 007E                         start 0000* 
           __end_of_ADC_read 0020                        ??_ISR 0000                ___fltol@sign1 0031  
                      ?_main 0000                        ?_init 0000              __end_of___awdiv 0051  
            __end_of___flmul 021A              __end_of___fltol 0066              ___awdiv@divisor 0002  
            ___awdiv@counter 0007                        _TRISA 008C                        status 0003  
                      wtemp0 007E              __initialization 0000                 __end_of_main 0087  
               __end_of_init 000C                       ??_main 0033                       ??_init 0002  
             ADC_read@result 0005                       _ADCON0 009D                       _ADCON1 009E  
                     _ADRESH 009C                       _ADRESL 009B             ___awdiv@dividend 0004  
                     _APFCON 011D                       _ANSELA 018C                       u141_20 0008  
                     u142_20 0009                       _INTCON 000B                       u145_27 0011  
                     _FVRCON 0117                       _OSCCON 0099                       _PWM1DC 0D93  
                     _PWM2DC 0DA3                       _PWM1PH 0D91                       _PWM2PH 0DA1  
                     _PWM1PR 0D95                       _PWM2PR 0DA5             __end_of___xxtofl 0096  
           _lightsEnableFlag 0008                    ??___awdiv 0006                    ??___flmul 0016  
                  ??___fltol 002C             __end_of_init_adc 0009             __end_of_init_pwm 001A  
           ___awdiv@quotient 0009                    ?_ADC_read 0002                 ___xxtofl@arg 000A  
               ___xxtofl@exp 0009                 ___xxtofl@val 0000      __end_of__initialization 0011  
                 ___fltol@f1 0028              _init_interrtupt 0000               __pcstackCOMMON 0000  
               __pidataBANK0 0000              ADC_read@channel 0007                   ??_ADC_read 0004  
                 __pbssBANK0 0000            __end_of__Umul8_16 001F                   __pmaintext 0000  
                 __pintentry 0000                    ?___xxtofl 0000                      _PWM1CON 0D9B  
                    _PWM2CON 0DAB      __end_of_init_interrtupt 0003                    ?_init_adc 0000  
                  ?_init_pwm 0000                      ___awdiv 0000                      ___flmul 0000  
                    ___fltol 0000  PWM_dc_set_yellow@duty_cycle 0002                      __ptext1 0000  
                    __ptext2 0000                      __ptext3 0000                      __ptext4 0000  
                    __ptext5 0000                      __ptext6 0000                      __ptext7 0000  
                    __ptext8 0000                      __ptext9 0000                   ??___xxtofl 0004  
       end_of_initialization 0011                   ??_init_adc 0002                   ??_init_pwm 0002  
           _PWM_dc_set_white 0000                ___xxtofl@sign 0008                  ___flmul@grs 001C  
           ?_init_interrtupt 0000          start_initialization 0000                  __end_of_ISR 001B  
              _PWM1LDCONbits 0D9F                _PWM2LDCONbits 0DAF                    __Umul8_16 0000  
                __pdataBANK0 0000                    ___flmul@a 0012                    ___flmul@b 000E  
                  ___latbits 0000                __pcstackBANK0 0000              _pot_temperature 0004  
                   ?___awdiv 0002                     ?___flmul 000E                     ?___fltol 0028  
                 ?__Umul8_16 0002                     _ADC_read 0000               _pot_brightness 0006  
   __end_of_PWM_dc_set_white 0029                     _LATAbits 010C                   _ADCON0bits 009D  
                  _yellow_DC 0000                  ??__Umul8_16 0004                     ___xxtofl 0000  
                   __ptext10 0000                     __ptext11 0000                     __ptext12 0000  
                   _init_adc 0000                     _init_pwm 0000                     int$flags 007E  
                   _white_DC 0002   PWM_dc_set_white@duty_cycle 0002                   _INTCONbits 000B  
                _PWM1CONbits 0D9B                  _PWM2CONbits 0DAB                     intlevel1 0000* 
                 _PWM1CLKCON 0D9E                   _PWM2CLKCON 0DAE            _PWM_dc_set_yellow 0000  
     __Umul8_16@multiplicand 0002           ?_PWM_dc_set_yellow 0002          ??_PWM_dc_set_yellow 0004  
          ?_PWM_dc_set_white 0002           ??_PWM_dc_set_white 0004         __Umul8_16@multiplier 000A  
          __Umul8_16@product 0006  
